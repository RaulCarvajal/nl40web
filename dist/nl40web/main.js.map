{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/agregar/agregar-colaborador/agregar-colaborador.component.css","webpack:///./src/app/agregar/agregar-colaborador/agregar-colaborador.component.html","webpack:///./src/app/agregar/agregar-colaborador/agregar-colaborador.component.ts","webpack:///./src/app/agregar/agregar-direccion/agregar-direccion.component.css","webpack:///./src/app/agregar/agregar-direccion/agregar-direccion.component.html","webpack:///./src/app/agregar/agregar-direccion/agregar-direccion.component.ts","webpack:///./src/app/agregar/agregar-producto/agregar-producto.component.css","webpack:///./src/app/agregar/agregar-producto/agregar-producto.component.html","webpack:///./src/app/agregar/agregar-producto/agregar-producto.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/construccion/construccion.component.css","webpack:///./src/app/construccion/construccion.component.html","webpack:///./src/app/construccion/construccion.component.ts","webpack:///./src/app/editar/editar-colaborador/editar-colaborador.component.css","webpack:///./src/app/editar/editar-colaborador/editar-colaborador.component.html","webpack:///./src/app/editar/editar-colaborador/editar-colaborador.component.ts","webpack:///./src/app/editar/editar-direccion/editar-direccion.component.css","webpack:///./src/app/editar/editar-direccion/editar-direccion.component.html","webpack:///./src/app/editar/editar-direccion/editar-direccion.component.ts","webpack:///./src/app/editar/editar-empresa/editar-empresa.component.css","webpack:///./src/app/editar/editar-empresa/editar-empresa.component.html","webpack:///./src/app/editar/editar-empresa/editar-empresa.component.ts","webpack:///./src/app/editar/editar-estatificacion/editar-estatificacion.component.css","webpack:///./src/app/editar/editar-estatificacion/editar-estatificacion.component.html","webpack:///./src/app/editar/editar-estatificacion/editar-estatificacion.component.ts","webpack:///./src/app/editar/editar-micuenta/editar-micuenta.component.css","webpack:///./src/app/editar/editar-micuenta/editar-micuenta.component.html","webpack:///./src/app/editar/editar-micuenta/editar-micuenta.component.ts","webpack:///./src/app/editar/editar-producto/editar-producto.component.css","webpack:///./src/app/editar/editar-producto/editar-producto.component.html","webpack:///./src/app/editar/editar-producto/editar-producto.component.ts","webpack:///./src/app/eliminar/eliminar-colaborador/eliminar-colaborador.component.css","webpack:///./src/app/eliminar/eliminar-colaborador/eliminar-colaborador.component.html","webpack:///./src/app/eliminar/eliminar-colaborador/eliminar-colaborador.component.ts","webpack:///./src/app/eliminar/eliminar-direccion/eliminar-direccion.component.css","webpack:///./src/app/eliminar/eliminar-direccion/eliminar-direccion.component.html","webpack:///./src/app/eliminar/eliminar-direccion/eliminar-direccion.component.ts","webpack:///./src/app/eliminar/eliminar-producto/eliminar-producto.component.css","webpack:///./src/app/eliminar/eliminar-producto/eliminar-producto.component.html","webpack:///./src/app/eliminar/eliminar-producto/eliminar-producto.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/forms/form-direcciones/form-direcciones.component.css","webpack:///./src/app/forms/form-direcciones/form-direcciones.component.html","webpack:///./src/app/forms/form-direcciones/form-direcciones.component.ts","webpack:///./src/app/forms/form-empresa/form-empresa.component.css","webpack:///./src/app/forms/form-empresa/form-empresa.component.html","webpack:///./src/app/forms/form-empresa/form-empresa.component.ts","webpack:///./src/app/forms/form-estatificacion/form-estatificacion.component.css","webpack:///./src/app/forms/form-estatificacion/form-estatificacion.component.html","webpack:///./src/app/forms/form-estatificacion/form-estatificacion.component.ts","webpack:///./src/app/forms/form-productos/form-productos.component.css","webpack:///./src/app/forms/form-productos/form-productos.component.html","webpack:///./src/app/forms/form-productos/form-productos.component.ts","webpack:///./src/app/forms/registro/registro.component.css","webpack:///./src/app/forms/registro/registro.component.html","webpack:///./src/app/forms/registro/registro.component.ts","webpack:///./src/app/inicio/inicio.component.css","webpack:///./src/app/inicio/inicio.component.html","webpack:///./src/app/inicio/inicio.component.ts","webpack:///./src/app/landing/landing.component.css","webpack:///./src/app/landing/landing.component.html","webpack:///./src/app/landing/landing.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/micuenta/micuenta.component.css","webpack:///./src/app/micuenta/micuenta.component.html","webpack:///./src/app/micuenta/micuenta.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/services/catalogos.service.ts","webpack:///./src/app/services/config.ts","webpack:///./src/app/services/contacto.service.ts","webpack:///./src/app/services/correos.service.ts","webpack:///./src/app/services/direcciones.service.ts","webpack:///./src/app/services/empresa.service.ts","webpack:///./src/app/services/estat.service.ts","webpack:///./src/app/services/productos.service.ts","webpack:///./src/app/services/session.service.ts","webpack:///./src/app/ver/colaboradores/colaboradores.component.css","webpack:///./src/app/ver/colaboradores/colaboradores.component.html","webpack:///./src/app/ver/colaboradores/colaboradores.component.ts","webpack:///./src/app/ver/estratificacion/estratificacion.component.css","webpack:///./src/app/ver/estratificacion/estratificacion.component.html","webpack:///./src/app/ver/estratificacion/estratificacion.component.ts","webpack:///./src/app/ver/miempresa/miempresa.component.css","webpack:///./src/app/ver/miempresa/miempresa.component.html","webpack:///./src/app/ver/miempresa/miempresa.component.ts","webpack:///./src/app/ver/producto/producto.component.css","webpack:///./src/app/ver/producto/producto.component.html","webpack:///./src/app/ver/producto/producto.component.ts","webpack:///./src/app/ver/productos/productos.component.css","webpack:///./src/app/ver/productos/productos.component.html","webpack:///./src/app/ver/productos/productos.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FncmVnYXIvYWdyZWdhci1jb2xhYm9yYWRvci9hZ3JlZ2FyLWNvbGFib3JhZG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Registro de colaborador</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <h1 class=\\\"lead\\\">\\n              Favor de llenar todos los campos requeridos, el usuario y contraseña se generarán automaticamente y se le harán llegar mediante email a tu colaborador.\\n            </h1>\\n          </div>        \\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n              <form [formGroup]=\\\"newUserForm\\\" (ngSubmit)=\\\"registrar()\\\">\\n                <div class=\\\"row\\\">\\n\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Nombre(s)\\\" formControlName=\\\"nombres\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('nombres').errors&&newUserForm.get('nombres').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('nombres').hasError('required')\\\" class=\\\"text-danger\\\">El o los nombres son requeridos</p>\\n                      <p *ngIf=\\\"newUserForm.get('nombres').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 50 caracteres</p>            \\n                      <p *ngIf=\\\"newUserForm.get('nombres').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>            \\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Apellido(s)\\\" formControlName=\\\"apellidos\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('apellidos').errors&&newUserForm.get('apellidos').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('apellidos').hasError('required')\\\" class=\\\"text-danger\\\">El o los apellidos son requeridos</p>\\n                      <p *ngIf=\\\"newUserForm.get('apellidos').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 50 caracteres</p>            \\n                      <p *ngIf=\\\"newUserForm.get('apellidos').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>            \\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <mat-label>Puesto</mat-label>\\n                      <mat-select formControlName=\\\"fk_id_puesto\\\" required>\\n                        <mat-option *ngFor=\\\"let puesto of puestos\\\" [value]=\\\"puesto.id_puesto\\\">\\n                          {{puesto.nombre_puesto}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field> \\n                    <div *ngIf=\\\"newUserForm.get('fk_id_puesto').errors&&newUserForm.get('fk_id_puesto').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('fk_id_puesto').hasError('required')\\\" class=\\\"text-danger\\\">El puesto es requerido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input type=\\\"text\\\" matInput placeholder=\\\"Télefono (Utilice de 10 a 20 caracteres númericos)\\\" formControlName=\\\"telefono\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('telefono').errors&&newUserForm.get('telefono').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('required')\\\" class=\\\"text-danger\\\">El télefono es requerido</p>\\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('pattern')\\\" class=\\\"text-danger\\\">Digite un télefono válido</p>\\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 10 caracteres</p>                        \\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 20 caracteres</p>            \\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input type=\\\"email\\\" matInput placeholder=\\\"Correo de contacto\\\" formControlName=\\\"email\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('email').errors&&newUserForm.get('email').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('email').hasError('required')\\\" class=\\\"text-danger\\\">El correo es requerido</p>\\n                      <p *ngIf=\\\"newUserForm.get('email').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 30 caracteres</p>            \\n                      <p *ngIf=\\\"newUserForm.get('email').hasError('email')\\\" class=\\\"text-danger\\\">Digite un correo válido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"offset-lg-6 col-lg-6 col-md-12 col-sm-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary m-auto\\\" [disabled]=\\\"newUserForm.invalid\\\">Registrar</button>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-spinner class=\\\"mx-auto\\\" *ngIf=\\\"prs\\\"></mat-spinner>\\n                  </div>\\n                </div>\\n              </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { ContactoService } from 'src/app/services/contacto.service';\nimport { SessionService } from 'src/app/services/session.service';\nimport { puestos } from 'src/app/interfaces/puestos.interface';\nimport { CorreosService } from 'src/app/services/correos.service';\n\n@Component({\n  selector: 'app-agregar-colaborador',\n  templateUrl: './agregar-colaborador.component.html',\n  styleUrls: ['./agregar-colaborador.component.css']\n})\nexport class AgregarColaboradorComponent implements OnInit {\n\n  constructor(\n    private location: Location,\n    private fb: FormBuilder, \n    private catServices:CatalogosService,\n    private contactoService:ContactoService,\n    private session:SessionService,\n    private correos: CorreosService\n  ) { }\n\n  newUserForm: FormGroup;\n  puestos:puestos[];\n  not_wss = /^\\S/;\n  prs: boolean = false;\n\n  ngOnInit() {\n    this.getPuestos();\n\n    this.newUserForm =  this.fb.group({\n      nombre_usuario : [this.generarString()],\n      contraseña : [this.generarString()],\n      nombres : ['',[Validators.required,Validators.maxLength(50),Validators.pattern(this.not_wss)]],\n      apellidos : ['',[Validators.required,Validators.maxLength(50),Validators.pattern(this.not_wss)]],\n      fk_id_puesto : ['',[Validators.required]],\n      telefono : ['',[Validators.required, Validators.pattern(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/),Validators.maxLength(20),Validators.minLength(10)]],\n      email : ['',[Validators.required, Validators.email,Validators.maxLength(30)]],\n      tipo_usuario : ['colaborador'],\n      estatus_registro : [6],\n      fk_id_empresa: [this.session.getEmpresaId()]\n    });\n  }\n\n  getPuestos(){\n    this.catServices.getPuestos().subscribe(\n      res => {\n        this.puestos = res;\n      },\n      err => {\n        console.error(err);\n    });\n  }\n\n  generarString(): String{\n    let caracteres = \"abcdefghijkmnpqrtuvwxyzABCDEFGHJKMNPQRTUVWXYZ2346789\";\n    let contraseña = \"\";\n    for (let i=0; i<10; i++) contraseña +=caracteres.charAt(Math.floor(Math.random()*caracteres.length)); \n    return contraseña;\n  }\n  registrar(){\n    this.prs = true;\n    let formdata = this.newUserForm.value;\n    this.contactoService.saveColaborador(formdata).subscribe(\n      res => {\n        this.correos.registroColaborador(\n          {\n            \"email_origen\" : formdata.email,\n            \"nombre\" : formdata.nombres,\n            \"usuario\" : formdata.nombre_usuario,\n            \"contra\" : formdata.contraseña\n          }\n        ).subscribe(res => this.return(),err => {});\n      },\n      err => console.log(err)\n    )\n  }\n  return(){\n    this.location.back();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FncmVnYXIvYWdyZWdhci1kaXJlY2Npb24vYWdyZWdhci1kaXJlY2Npb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Agregar dirección</h1>\\n    </div>\\n  </div>\\n\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-form-direcciones></app-form-direcciones>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-agregar-direccion',\n  templateUrl: './agregar-direccion.component.html',\n  styleUrls: ['./agregar-direccion.component.css']\n})\nexport class AgregarDireccionComponent implements OnInit {\n\n  constructor(\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n  }\n\n  return(){\n    this.location.back();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FncmVnYXIvYWdyZWdhci1wcm9kdWN0by9hZ3JlZ2FyLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Agregar producto</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <form class=\\\"example-form\\\" [formGroup]=\\\"formProducto\\\" (ngSubmit)=\\\"save()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-8 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Nombre producto\\\" required formControlName=\\\"nombre_producto\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('nombre_producto').errors&&formProducto.get('nombre_producto').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('nombre_producto').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('nombre_producto').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n              <p *ngIf=\\\"formProducto.get('nombre_producto').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-4 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Tipo (Origen)</mat-label>\\n              <mat-select formControlName=\\\"tipo\\\" (selectionChange)=\\\"tipoProd()\\\" required>\\n                <mat-option *ngFor=\\\"let tipo of tipos\\\" [value]=\\\"tipo.id_tipo_prod\\\">{{tipo.tipo_producto}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('tipo').errors&&formProducto.get('tipo').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('tipo').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <textarea matInput placeholder=\\\"Descripción del producto\\\" formControlName=\\\"descripcion_producto\\\" required></textarea>                \\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('descripcion_producto').errors&&formProducto.get('descripcion_producto').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('descripcion_producto').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('descripcion_producto').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 500 caracteres</p>\\n              <p *ngIf=\\\"formProducto.get('descripcion_producto').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Tecnológias que utiliza el producto</mat-label>\\n              <mat-select multiple formControlName=\\\"tecnologias\\\" required>\\n                <mat-option *ngFor=\\\"let tec of tecnologias\\\" [value]=\\\"tec.id_cat_tec\\\">{{tec.nombre_tecnologias}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('tecnologias').errors&&formProducto.get('tecnologias').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('tecnologias').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"ocultar&&tercero\\\">\\n          <div class=\\\"col-lg-8 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Marca del producto\\\" formControlName=\\\"marca\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('marca').errors&&formProducto.get('marca').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('marca').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('marca').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n              <p *ngIf=\\\"formProducto.get('marca').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-4 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Nivel de Partnership\\\" formControlName=\\\"nivel_partnership\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('nivel_partnership').errors&&formProducto.get('nivel_partnership').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('nivel_partnership').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"ocultar&&propio\\\">\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Posicionamiento en el mercado del producto</mat-label>\\n              <mat-select formControlName=\\\"posicionamiento\\\">\\n                <mat-option *ngFor=\\\"let pos of poss\\\" [value]=\\\"pos.id_cat_pos\\\">{{pos.posicionamiento}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('posicionamiento').errors&&formProducto.get('posicionamiento').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('posicionamiento').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Caso de éxito\\\" formControlName=\\\"caso_exito\\\" required>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('caso_exito').errors&&formProducto.get('caso_exito').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('caso_exito').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('caso_exito').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Referencia del producto en producción\\\" formControlName=\\\"referencia\\\" required>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('referencia').errors&&formProducto.get('referencia').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('referencia').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('referencia').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div formArrayName=\\\"val_ind\\\">\\n\\n          <div *ngFor=\\\"let item of getValInd.controls; let pind = index\\\" [formGroupName]=\\\"pind\\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"pind>0\\\">\\n              <div class=\\\"col text-right\\\">\\n                <button class=\\\"btn btn-outline-dark btn-sm ml-auto\\\" (click)=\\\"delIndVal(pind)\\\" type=\\\"button\\\"  data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Eliminar Value Driver\\\">\\n                  <mat-icon>close</mat-icon>\\n                </button>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Value Drivers</mat-label>\\n                  <mat-select formControlName=\\\"value_driver\\\" (selectionChange)=\\\"getIL(pind,pind)\\\">\\n                    <mat-option *ngFor=\\\"let v of vd\\\" [value]=\\\"v.id_value_divers\\\">{{v.value_driver}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n  \\n              <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Industry Levers</mat-label>\\n                  <mat-select formControlName=\\\"industry_lever\\\" multiple>\\n                    <mat-option *ngFor=\\\"let i of il[pind]\\\" [value]=\\\"i.industry_levers\\\">{{i.industry_levers}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"sc\\\">\\n          <div class=\\\"col\\\">\\n            <button class=\\\"btn btn-outline-primary btn-sm ml-auto\\\" (click)=\\\"addIndVal()\\\" type=\\\"button\\\"  data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Añadir Value driver\\\">\\n              <mat-icon>add_box</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-right\\\">\\n            <button type=\\\"reset\\\" id=\\\"reset\\\" class=\\\"btn btn-danger\\\" style=\\\"width: 100px;\\\">Limpiar</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px; width: 100px;\\\" [disabled]=\\\"formProducto.invalid\\\">Guardar</button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-left\\\">\\n            <small class=\\\"text-danger\\\">*Campos requeridos<br>*Por el momento limitado a 5 value drivers por producto<br>*Inserción de productos uno por uno</small>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"offset-lg-5 col-lg-1 offset-md-5 col-md-1 offset-sm-4 col-sm-2\\\">\\n            <mat-spinner *ngIf=\\\"saving\\\"></mat-spinner>\\n            <h1 class=\\\"lead text-danger\\\" *ngIf=\\\"error\\\">Error en registro</h1>\\n          </div>\\n        </div>\\n        \\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from 'src/app/services/session.service';\nimport { Router } from '@angular/router';\nimport { ProductosService } from 'src/app/services/productos.service';\nimport { Location } from '@angular/common';\nimport { FormBuilder, Validators, FormGroup, FormArray } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\n\n@Component({\n  selector: 'app-agregar-producto',\n  templateUrl: './agregar-producto.component.html',\n  styleUrls: ['./agregar-producto.component.css']\n})\nexport class AgregarProductoComponent implements OnInit {\n\n  constructor(\n    private session: SessionService,\n    private router: Router,\n    private location: Location,\n    private prods: ProductosService,\n    private fb: FormBuilder,\n    private cats: CatalogosService\n  ) { }\n\n  tipos:any[];\n  tecnologias:any[];\n  niveles:any[];\n  poss:any[];\n  vd:any[];\n  il:any[] = new Array(4);\n  productos: any[];\n\n  cargando:boolean = false;\n  saving:boolean=false;\n  error:boolean=false;\n  ocultar: boolean = false;\n  propio: boolean = false;\n  tercero: boolean = false;\n  guardado: boolean = false;\n  sc: boolean = true;\n  tiene_prods:boolean = false;\n  not_wss = /^\\S/;\n\n  formProducto: FormGroup;\n\n  ngOnInit() {\n    this.formProducto = this.fb.group({\n      nombre_producto : [null,[Validators.required, Validators.maxLength(100), Validators.pattern(this.not_wss)]],\n      tipo : [null,[Validators.required]],\n      descripcion_producto : [null,[Validators.required, Validators.maxLength(500), Validators.pattern(this.not_wss)]],\n      tecnologias : [null,[Validators.required]],\n      marca : [null,[Validators.maxLength(100), Validators.pattern(this.not_wss)]],\n      nivel_partnership : [null,[]],\n      posicionamiento : [null,[]],\n      val_ind : this.fb.array([\n        this.fb.group({\n          value_driver : [null,[Validators.required]],\n          industry_lever : [null,[Validators.required]]\n        })\n      ]),\n      /*value_driver : [null,[Validators.required]],\n      industry_lever : [null,[Validators.required]],*/\n      caso_exito : [null,[Validators.required, Validators.pattern(this.not_wss)]],\n      referencia : [null,[Validators.required, Validators.pattern(this.not_wss)]] \n    });\n\n\n    this.getCats();\n  }\n\n  getCats(){\n    this.cats.getTipoProd().subscribe(\n      res => {\n        this.tipos = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getTecnologias().subscribe(\n      res => {\n        this.tecnologias = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getNivelPS().subscribe(\n      res => {\n        this.niveles = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getPosicionamiento().subscribe(\n      res => {\n        this.poss = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getValueDrivers().subscribe(\n      res => {\n        /*for (let index = 0; index < 5; index++) {\n          this.vd.push(res);\n        }*/\n        this.vd = res;\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  tipoProd(){\n    this.ocultar = true;\n    if(this.formProducto.value.tipo!==1){\n      this.tercero = true;\n      this.propio = false;\n    }else{\n      this.tercero = false;\n      this.propio = true;\n    }\n  }\n\n  save(){\n    let temp = this.formProducto.value;\n    temp.empresa_id = this.session.getEmpresaId(),\n    temp.contacto_id = this.session.getContactoId()\n    //temp.industry_lever = temp.industry_lever.join(', ');\n    this.saving = true;\n    this.prods.add(temp).subscribe(\n      res => {\n        this.session.updateSession();\n        this.saving = false;\n        this.formProducto.disable();\n        this.guardado = true;\n        this.return();\n      },\n      err => {\n        this.error=true;\n        console.error(err);\n      }\n    );\n  }\n\n  finalizar(){\n    this.router.navigateByUrl('landing');\n  }\n\n  addOtro(){\n    document.getElementById('reset').click();\n    this.formProducto.enable();\n    this.ocultar = false;\n    this.propio = false;\n    this.tercero = false;\n    this.guardado = false;\n  }\n\n  get getValInd(){\n    return this.formProducto.get('val_ind') as FormArray;\n  }\n\n  addIndVal(){\n    const cntrs = <FormArray>this.formProducto.controls['val_ind'];\n    cntrs.push(this.fb.group({\n      value_driver : [null,[Validators.required]],\n      industry_lever : [null,[Validators.required]]\n    }));\n    if((<FormArray>this.formProducto.controls['val_ind']).length>4){\n      this.sc = false;      \n    }\n  }\n\n  delIndVal(pind: number){\n    const cntrs = <FormArray>this.formProducto.controls['val_ind'];\n    cntrs.removeAt(pind); \n    if(cntrs.length<5){\n      this.sc = true;\n    }\n  }\n\n  routerTo(r : string)\n  {\n    this.router.navigateByUrl(r);\n  }\n\n  getIL(pid: number, index: number){\n    this.cats.getIndustryLevers(this.formProducto.value.val_ind[index].value_driver).subscribe(\n      res => {\n        this.il[pid] = res;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  return(){\n    this.location.back();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistroComponent } from './forms/registro/registro.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { InicioComponent } from './inicio/inicio.component';\nimport { MiempresaComponent } from './ver/miempresa/miempresa.component';\nimport { ConstruccionComponent } from './construccion/construccion.component';\nimport { ProductoComponent } from './ver/producto/producto.component';\nimport { EditarEmpresaComponent } from './editar/editar-empresa/editar-empresa.component';\nimport { EditarDireccionComponent } from './editar/editar-direccion/editar-direccion.component';\nimport { EditarEstatificacionComponent } from './editar/editar-estatificacion/editar-estatificacion.component';\nimport { EliminarDireccionComponent } from './eliminar/eliminar-direccion/eliminar-direccion.component';\nimport { EstratificacionComponent } from './ver/estratificacion/estratificacion.component';\nimport { ColaboradoresComponent } from './ver/colaboradores/colaboradores.component';\nimport { AgregarDireccionComponent } from './agregar/agregar-direccion/agregar-direccion.component';\nimport { AgregarColaboradorComponent } from './agregar/agregar-colaborador/agregar-colaborador.component';\nimport { EliminarColaboradorComponent } from './eliminar/eliminar-colaborador/eliminar-colaborador.component';\nimport { EditarColaboradorComponent } from './editar/editar-colaborador/editar-colaborador.component';\nimport { MicuentaComponent } from './micuenta/micuenta.component';\nimport { EditarMicuentaComponent } from './editar/editar-micuenta/editar-micuenta.component';\nimport { ProductosComponent } from './ver/productos/productos.component';\nimport { EditarProductoComponent } from './editar/editar-producto/editar-producto.component';\nimport { EliminarProductoComponent } from './eliminar/eliminar-producto/eliminar-producto.component';\nimport { AgregarProductoComponent } from './agregar/agregar-producto/agregar-producto.component';\n\nconst routes: Routes = [\n  {path : 'registro', component : RegistroComponent},\n  {path : 'landing', component : LandingComponent},\n  {path : 'inicio', component : InicioComponent},\n  {path : 'empresa', component : MiempresaComponent},\n  {path : 'micuenta', component : MicuentaComponent},\n  {path : 'producto/:id', component : ProductoComponent},\n  {path : 'productos', component : ProductosComponent},\n  {path : 'estratificacion', component : EstratificacionComponent},\n  {path : 'colaboradores', component : ColaboradoresComponent},\n  {path : 'editar/direcciones/:id', component : EditarDireccionComponent},\n  {path : 'editar/empresa', component : EditarEmpresaComponent},\n  {path : 'editar/estratificacion', component : EditarEstatificacionComponent},\n  {path : 'editar/colaborador/:id', component : EditarColaboradorComponent},\n  {path : 'editar/producto/:id', component : EditarProductoComponent},\n  {path : 'editar/micuenta', component : EditarMicuentaComponent},\n  {path : 'eliminar/empresa', component : EditarEmpresaComponent},\n  {path : 'eliminar/direccion/:id', component : EliminarDireccionComponent},\n  {path : 'eliminar/colaborador/:id', component : EliminarColaboradorComponent},\n  {path : 'eliminar/producto/:id', component : EliminarProductoComponent},\n  {path : 'agregar/direccion', component : AgregarDireccionComponent},\n  {path : 'agregar/colaborador', component : AgregarColaboradorComponent},\n  {path : 'agregar/producto', component : AgregarProductoComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private router:Router){\n    this.router.navigateByUrl('landing');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from '@angular/common/http'; \nimport { NgSelect2Module } from 'ng-select2';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistroComponent } from './forms/registro/registro.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { LandingComponent } from './landing/landing.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { InicioComponent } from './inicio/inicio.component';\nimport { MatDatepickerModule, MatNativeDateModule } from '@angular/material';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormEmpresaComponent } from './forms/form-empresa/form-empresa.component';\nimport { FormDireccionesComponent } from './forms/form-direcciones/form-direcciones.component';\nimport { FormEstatificacionComponent } from './forms/form-estatificacion/form-estatificacion.component';\nimport { FormProductosComponent } from './forms/form-productos/form-productos.component';\n//import { NgbProgressbarModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ConstruccionComponent } from './construccion/construccion.component';\nimport { CatalogosService } from './services/catalogos.service';\nimport { ContactoService } from './services/contacto.service';\nimport { SessionService } from './services/session.service';\nimport { EmpresaService } from './services/empresa.service';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { DireccionesService } from './services/direcciones.service';\nimport { EstatService } from './services/estat.service';\nimport { ProductosService } from './services/productos.service';\nimport { MiempresaComponent } from './ver/miempresa/miempresa.component';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableModule } from '@angular/material/table';\nimport { ProductoComponent } from './ver/producto/producto.component';\nimport { CorreosService } from './services/correos.service'; \nimport { FooterComponent } from './footer/footer.component';\nimport { EditarEmpresaComponent } from './editar/editar-empresa/editar-empresa.component';\nimport { EditarDireccionComponent } from './editar/editar-direccion/editar-direccion.component';\nimport { EditarEstatificacionComponent } from './editar/editar-estatificacion/editar-estatificacion.component';\nimport { EliminarDireccionComponent } from './eliminar/eliminar-direccion/eliminar-direccion.component';\nimport { EstratificacionComponent } from './ver/estratificacion/estratificacion.component';\nimport { ColaboradoresComponent } from './ver/colaboradores/colaboradores.component';\nimport { AgregarDireccionComponent } from './agregar/agregar-direccion/agregar-direccion.component';\nimport { MAT_DATE_LOCALE } from '@angular/material';\nimport { AgregarColaboradorComponent } from './agregar/agregar-colaborador/agregar-colaborador.component';\nimport { EliminarColaboradorComponent } from './eliminar/eliminar-colaborador/eliminar-colaborador.component';\nimport { EditarColaboradorComponent } from './editar/editar-colaborador/editar-colaborador.component';\nimport { MicuentaComponent } from './micuenta/micuenta.component';\nimport { EditarMicuentaComponent } from './editar/editar-micuenta/editar-micuenta.component';\nimport { ProductosComponent } from './ver/productos/productos.component';\nimport { EditarProductoComponent } from './editar/editar-producto/editar-producto.component';\nimport { EliminarProductoComponent } from './eliminar/eliminar-producto/eliminar-producto.component';\nimport { AgregarProductoComponent } from './agregar/agregar-producto/agregar-producto.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegistroComponent,\n    LandingComponent,\n    InicioComponent,\n    FormEmpresaComponent,\n    FormDireccionesComponent,\n    FormEstatificacionComponent,\n    FormProductosComponent,\n    NavbarComponent,\n    ConstruccionComponent,\n    MiempresaComponent,\n    ProductoComponent,\n    FooterComponent,\n    EditarEmpresaComponent,\n    EditarDireccionComponent,\n    EliminarDireccionComponent,\n    EditarEstatificacionComponent,\n    EstratificacionComponent,\n    ColaboradoresComponent,\n    AgregarDireccionComponent,\n    AgregarColaboradorComponent,\n    EliminarColaboradorComponent,\n    EditarColaboradorComponent,\n    MicuentaComponent,\n    EditarMicuentaComponent,\n    ProductosComponent,\n    EditarProductoComponent,\n    EliminarProductoComponent,\n    AgregarProductoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    //NgbProgressbarModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    TabsModule.forRoot(),\n    NgbModule,\n    MatTableModule,\n    NgSelect2Module\n  ],\n  providers: [\n    MatDatepickerModule,\n    CatalogosService,\n    ContactoService,\n    SessionService,\n    EmpresaService,\n    DireccionesService,\n    EstatService,\n    ProductosService,\n    CorreosService,\n    { provide: MAT_DATE_LOCALE, useValue: 'es-ES' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnN0cnVjY2lvbi9jb25zdHJ1Y2Npb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\">\\n  <!--\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1 class=\\\"display-4\\\">SITIO EN CONSTRUCCIÓN</h1>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row \\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"text-center\\\">\\n        <img src=\\\"assets/en-construcion.png\\\" alt=\\\"Bajo construcción\\\" class=\\\"img-fluid mx-auto\\\">\\n      </div>\\n    </div>\\n  </div> \\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <h1 class=\\\"lead\\\">Pronto estará en linea.</h1>\\n    </div>\\n  </div>\\n  -->\\n  <app-form-productos></app-form-productos>\\n  <br>\\n  <app-form-empresa></app-form-empresa>\\n  <br>\\n  <app-form-estatificacion></app-form-estatificacion>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-construccion',\n  templateUrl: './construccion.component.html',\n  styleUrls: ['./construccion.component.css']\n})\nexport class ConstruccionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRhci9lZGl0YXItY29sYWJvcmFkb3IvZWRpdGFyLWNvbGFib3JhZG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Editar colaborador</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"container\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n              <form [formGroup]=\\\"newUserForm\\\" (ngSubmit)=\\\"registrar()\\\">\\n\\n                <div class=\\\"row\\\">\\n                \\n                  <div class=\\\"col\\\">\\n                      <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput placeholder=\\\"Usuario (Utilice de 8 a 30 caracteres sin espacios)\\\" formControlName=\\\"nombre_usuario\\\" required>\\n                      </mat-form-field>\\n                      <div *ngIf=\\\"newUserForm.get('nombre_usuario').errors&&newUserForm.get('nombre_usuario').dirty\\\">\\n                        <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('required')\\\" class=\\\"text-danger\\\">El nombre de usuario es requerido</p>\\n                        <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 8 caracteres</p>\\n                        <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 30 caracteres</p>\\n                        <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('pattern')\\\" class=\\\"text-danger\\\">No se permiten espacios</p>\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col\\\">\\n                      <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Contraseña (Minimo 6 caracteres sin espacios)\\\" formControlName=\\\"contraseña\\\" required>\\n                      </mat-form-field>\\n                      <div *ngIf=\\\"newUserForm.get('contraseña').errors&&newUserForm.get('contraseña').dirty\\\">\\n                        <p *ngIf=\\\"newUserForm.get('contraseña').hasError('required')\\\" class=\\\"text-danger\\\">La contraseña es requerida</p>\\n                        <p *ngIf=\\\"newUserForm.get('contraseña').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 6 caracteres</p>\\n                        <p *ngIf=\\\"newUserForm.get('contraseña').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 12 caracteres</p>\\n                        <p *ngIf=\\\"newUserForm.get('contraseña').hasError('pattern')\\\" class=\\\"text-danger\\\">No se permiten espacios</p>\\n                      </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Nombre(s)\\\" formControlName=\\\"nombres\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('nombres').errors&&newUserForm.get('nombres').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('nombres').hasError('required')\\\" class=\\\"text-danger\\\">El o los nombres son requeridos</p>\\n                      <p *ngIf=\\\"newUserForm.get('nombres').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 50 caracteres</p>            \\n                      <p *ngIf=\\\"newUserForm.get('nombres').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>            \\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Apellido(s)\\\" formControlName=\\\"apellidos\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('apellidos').errors&&newUserForm.get('apellidos').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('apellidos').hasError('required')\\\" class=\\\"text-danger\\\">El o los apellidos son requeridos</p>\\n                      <p *ngIf=\\\"newUserForm.get('apellidos').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 50 caracteres</p>            \\n                      <p *ngIf=\\\"newUserForm.get('apellidos').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>            \\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <mat-label>Puesto</mat-label>\\n                      <mat-select formControlName=\\\"fk_id_puesto\\\" required>\\n                        <mat-option *ngFor=\\\"let puesto of puestos\\\" [value]=\\\"puesto.id_puesto\\\">\\n                          {{puesto.nombre_puesto}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field> \\n                    <div *ngIf=\\\"newUserForm.get('fk_id_puesto').errors&&newUserForm.get('fk_id_puesto').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('fk_id_puesto').hasError('required')\\\" class=\\\"text-danger\\\">El puesto es requerido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input type=\\\"text\\\" matInput placeholder=\\\"Télefono (Utilice de 10 a 20 caracteres númericos)\\\" formControlName=\\\"telefono\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('telefono').errors&&newUserForm.get('telefono').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('required')\\\" class=\\\"text-danger\\\">El télefono es requerido</p>\\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('pattern')\\\" class=\\\"text-danger\\\">Digite un télefono válido</p>\\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 10 caracteres</p>                        \\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 20 caracteres</p>            \\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input type=\\\"email\\\" matInput placeholder=\\\"Correo de contacto\\\" formControlName=\\\"email\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('email').errors&&newUserForm.get('email').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('email').hasError('required')\\\" class=\\\"text-danger\\\">El correo es requerido</p>\\n                      <p *ngIf=\\\"newUserForm.get('email').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 30 caracteres</p>            \\n                      <p *ngIf=\\\"newUserForm.get('email').hasError('email')\\\" class=\\\"text-danger\\\">Digite un correo válido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"offset-lg-6 col-lg-6 col-md-12 col-sm-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary m-auto\\\" [disabled]=\\\"newUserForm.invalid\\\">Actualizar</button>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-spinner class=\\\"mx-auto\\\" *ngIf=\\\"prs\\\"></mat-spinner>\\n                  </div>\\n                </div>\\n              </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { ContactoService } from 'src/app/services/contacto.service';\nimport { puestos } from 'src/app/interfaces/puestos.interface';\nimport { Location } from '@angular/common';\nimport { contacto } from 'src/app/interfaces/contacto.interface';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-editar-colaborador',\n  templateUrl: './editar-colaborador.component.html',\n  styleUrls: ['./editar-colaborador.component.css']\n})\nexport class EditarColaboradorComponent implements OnInit {\n\n  constructor(\n    private location: Location,\n    private fb: FormBuilder, \n    private catServices:CatalogosService,\n    private contactoService:ContactoService,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.getPuestos();\n    this.getColaborador();\n  }\n\n  newUserForm: FormGroup; \n  puestos:puestos[];\n  not_wss = /^\\S/;\n  cargando: boolean = true;\n  colaborador: contacto;\n\n  initForm(){\n    this.newUserForm =  this.fb.group({\n      nombre_usuario : [this.colaborador.nombre_usuario,[Validators.required,Validators.minLength(8),Validators.maxLength(30),Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      contraseña : [this.colaborador.contraseña,[Validators.required,Validators.minLength(6),Validators.maxLength(12),Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      nombres : [this.colaborador.nombres,[Validators.required,Validators.maxLength(50),Validators.pattern(this.not_wss)]],\n      apellidos : [this.colaborador.apellidos,[Validators.required,Validators.maxLength(50),Validators.pattern(this.not_wss)]],\n      fk_id_puesto : [this.colaborador.fk_id_puesto,[Validators.required]],\n      telefono : [this.colaborador.telefono,[Validators.required, Validators.pattern(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/),Validators.maxLength(20),Validators.minLength(10)]],\n      email : [this.colaborador.email,[Validators.required, Validators.email,Validators.maxLength(30)]],\n      tipo_usuario : ['colaborador'],\n      id_contacto: [this.colaborador.id_contacto]\n    });\n    this.cargando = false;\n  }\n\n  getColaborador(){\n    this.contactoService.getContacto(+this.activatedRoute.snapshot.paramMap.get(\"id\")).subscribe(\n      res => {\n        this.colaborador = res;\n        this.initForm();\n      },\n      err => console.log(err)\n    );\n  }\n\n  getPuestos(){\n    this.catServices.getPuestos().subscribe(\n      res => {\n        this.puestos = res;\n      },\n      err => {\n        console.error(err);\n    });\n  }\n\n  registrar(){\n    this.cargando = true;\n    let formdata = this.newUserForm.value;\n    this.contactoService.updtColaborador(formdata).subscribe(\n      res => {\n        this.cargando = false;\n      },\n      err => console.log(err)\n    )\n  }\n  return(){\n    this.location.back();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRhci9lZGl0YXItZGlyZWNjaW9uL2VkaXRhci1kaXJlY2Npb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Actualizar dirección</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <form [formGroup]=\\\"dirForm\\\" (ngSubmit)=\\\"update()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 col-md-9 col-lg-8\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Dirección\\\" formControlName=\\\"direccion\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"dirForm.get('direccion').errors&&dirForm.get('direccion').dirty\\\">\\n              <p *ngIf=\\\"dirForm.get('direccion').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 150 caracteres</p>\\n              <p *ngIf=\\\"dirForm.get('direccion').hasError('required')\\\" class=\\\"text-danger\\\">Este campo requerido</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12 col-md-3 col-lg-4\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Tipo de sede</mat-label>\\n              <mat-select formControlName=\\\"tipo_sede\\\" class=\\\"md-select-menu-container\\\">\\n                <mat-option *ngFor=\\\"let ts of tipo_sede\\\" [value]=\\\"ts.id_cat_sede\\\">{{ts.tipo_sede}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"dirForm.get('tipo_sede').errors&&dirForm.get('tipo_sede').dirty\\\">\\n              <p *ngIf=\\\"dirForm.get('tipo_sede').hasError('required')\\\" class=\\\"text-danger\\\">Este campo requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 col-md-4 col-lg-4\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>País</mat-label>\\n              <mat-select formControlName=\\\"pais\\\" class=\\\"md-select-menu-container\\\">\\n                <mat-option *ngFor=\\\"let pais of paises\\\" [value]=\\\"pais.nombre\\\">{{pais.nombre}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"dirForm.get('pais').errors&&dirForm.get('pais').dirty\\\">\\n              <p *ngIf=\\\"dirForm.get('pais').hasError('required')\\\" class=\\\"text-danger\\\">Este campo requerido</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12 col-md-4 col-lg-4\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Estado / Provincia / Departamento</mat-label>\\n              <mat-select formControlName=\\\"estado\\\" (selectionChange)=\\\"getMunicipio()\\\" class=\\\"md-select-menu-container\\\">\\n                <mat-option *ngFor=\\\"let estado of estados\\\" [value]=\\\"estado.id_estado\\\">{{estado.nombre_estado}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-sm-12 col-md-4 col-lg-4\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <!--<input matInput placeholder=\\\"Municipio\\\" formControlName=\\\"municipio\\\">-->\\n              <mat-label>Municipio</mat-label>\\n              <mat-select formControlName=\\\"municipio\\\" class=\\\"md-select-menu-container\\\">\\n                <mat-option *ngFor=\\\"let municipio of municipios\\\" [value]=\\\"municipio.nombre_municipio\\\">{{municipio.nombre_municipio}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"dirForm.get('municipio').errors&&dirForm.get('municipio').dirty\\\">\\n              <p *ngIf=\\\"dirForm.get('municipio').hasError('required')\\\" class=\\\"text-danger\\\">Este campo requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <hr>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-right\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px; width: 100px;\\\" [disabled]=\\\"dirForm.invalid\\\">Actualizar</button>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-left\\\">\\n            <small class=\\\"text-danger\\\"><strong>* TODOS LOS CAMPOS SON REQUERIDOS <br> **POR EL MOMENTO SOLO DISPONIBLE MÉXICO</strong></small>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { SessionService } from 'src/app/services/session.service';\nimport { direccion_get } from 'src/app/interfaces/direcciones_get.interface';\nimport { DireccionesService } from 'src/app/services/direcciones.service';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { estado } from 'src/app/interfaces/estados.interface';\nimport { municipio } from 'src/app/interfaces/municipios.interface';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-editar-direccion',\n  templateUrl: './editar-direccion.component.html',\n  styleUrls: ['./editar-direccion.component.css']\n})\nexport class EditarDireccionComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private direccionesService: DireccionesService,\n    private session: SessionService,\n    private catalogos: CatalogosService,\n    private location: Location,\n    private activatedRoute: ActivatedRoute\n  ) { \n    this.getEstados();\n    this.getTipoSede();\n  }\n\n  ngOnInit() {\n  }\n\n  dirForm: FormGroup;\n  direccion:direccion_get;\n  tipo_sede: any[];\n  paises:any[] = [\n    { 'nombre' : 'México'}\n  ];\n  estados: estado[];\n  municipios: municipio[];\n  cargando: boolean = true;\n  id_estado: number = 0; \n  id_tiposede:number = 0;\n  \n  getTipoSede(){\n    this.catalogos.getTipoSede().subscribe(\n      res => {\n        this.tipo_sede = res;\n      },\n      err => {\n        console.error(err)\n      }\n    );\n  }\n  getDirs(){\n    this.direccionesService.get(this.session.getEmpresaId()).subscribe(\n      res => {\n        let id = +this.activatedRoute.snapshot.paramMap.get(\"id\");\n        this.direccion = res.find(e => { return e.id === id; });\n        this.id_estado = this.estados.find(e => { return e.nombre_estado == this.direccion.estado}).id_estado;\n        this.id_tiposede = this.tipo_sede.find(e => { return e.tipo_sede == this.direccion.tipo_sede}).id_cat_sede;\n        this.initForm();\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  getEstados(){\n    this.catalogos.getEstadosMex().subscribe(\n      res => {\n        this.estados =  res;\n        this.getDirs();\n      }, err => {\n        console.error(err);\n      }\n    );\n  }\n  getMunicipio(){\n    this.catalogos.getMunicipiosMex(this.dirForm.value.estado).subscribe(\n      res => {\n        this.municipios =  res;\n        this.dirForm.controls.municipio.setValue(this.direccion.municipio);\n        this.cargando = false;\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n  existeDirFiscal(){\n    this.direccionesService.existeDirFiscal(this.session.getEmpresaId()).subscribe(\n      res => {\n        res? this.tipo_sede.shift():null;\n      },\n      err => { \n        console.error(err);\n      }\n    );\n  }\n  return(){\n    this.location.back();\n  }\n  update(){\n    let temp = this.dirForm.value\n    temp.estado = this.getEstadoById();\n    this.direccionesService.update(temp).subscribe(\n      res => {\n        this.return();\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  getEstadoById(){\n    return this.estados.find(e => { return e.id_estado > this.dirForm.value.estado-1; }).nombre_estado;\n  }\n  initForm(){\n    this.dirForm = this.fb.group({\n      direccion : [this.direccion.direccion,[Validators.required, Validators.maxLength(150)]],\n      tipo_sede : [this.id_tiposede,[Validators.required]],\n      pais : ['México',[Validators.required]],\n      estado : [this.id_estado,[Validators.required]],\n      municipio : ['',[Validators.required]],\n      id_emp_dir : [+this.activatedRoute.snapshot.paramMap.get(\"id\"),[]]\n    });\n    this.getMunicipio();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRhci9lZGl0YXItZW1wcmVzYS9lZGl0YXItZW1wcmVzYS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr> \\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Actualización de datos</h1>\\n    </div>\\n  </div>\\n\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <form class=\\\"example-form\\\" [formGroup]=\\\"empresaForm\\\" (ngSubmit)=\\\"update()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <input matInput placeholder=\\\"Nombre Empresa\\\" formControlName=\\\"nombre\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Tooltip on top\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"empresaForm.get('nombre').errors&&empresaForm.get('nombre').dirty\\\">\\n                <p *ngIf=\\\"empresaForm.get('nombre').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                <p *ngIf=\\\"empresaForm.get('nombre').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con un espacio</p>\\n                <p *ngIf=\\\"empresaForm.get('nombre').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 150 caracteres</p>\\n              </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Razón social\\\" formControlName=\\\"razon_social\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('razon_social').errors&&empresaForm.get('razon_social').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('razon_social').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"empresaForm.get('razon_social').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con un espacio</p>\\n              <p *ngIf=\\\"empresaForm.get('razon_social').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 150 caracteres</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <input matInput placeholder=\\\"RFC\\\" formControlName=\\\"rfc\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"empresaForm.get('rfc').errors&&empresaForm.get('rfc').dirty\\\">\\n                <p *ngIf=\\\"empresaForm.get('rfc').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                <p *ngIf=\\\"empresaForm.get('rfc').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 13 caracteres</p>\\n                <p *ngIf=\\\"empresaForm.get('rfc').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con el formato de un RFC</p>\\n                <p *ngIf=\\\"empresaForm.get('rfc').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 12 caracteres</p>\\n              </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Fecha de creación\\\" formControlName=\\\"fecha_creación\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker></mat-datepicker>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('fecha_creación').errors&&empresaForm.get('fecha_creación').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('fecha_creación').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <h1 class=\\\"lead\\\">Participación en las redes sociales</h1>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <input matInput placeholder=\\\"Web de la Empresa\\\" formControlName=\\\"web\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"empresaForm.get('web').errors&&empresaForm.get('web').dirty\\\">\\n                <p *ngIf=\\\"empresaForm.get('web').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n                <p *ngIf=\\\"empresaForm.get('web').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n              </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Linkedin (Liga a su perfil)\\\" formControlName=\\\"linkedin\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('linkedin').errors&&empresaForm.get('linkedin').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('linkedin').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n              <p *ngIf=\\\"empresaForm.get('linkedin').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Facebook (Liga a su perfil)\\\" formControlName=\\\"facebook\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('facebook').errors&&empresaForm.get('facebook').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('facebook').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n              <p *ngIf=\\\"empresaForm.get('facebook').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Twitter (Liga a su perfil)\\\" formControlName=\\\"twitter\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('twitter').errors&&empresaForm.get('twitter').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('twitter').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n              <p *ngIf=\\\"empresaForm.get('twitter').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Instagram (Liga a su perfil)\\\" formControlName=\\\"instagram\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('instagram').errors&&empresaForm.get('instagram').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('instagram').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n              <p *ngIf=\\\"empresaForm.get('instagram').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <h1 class=\\\"lead\\\">Datos adicionales</h1>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <textarea matInput placeholder=\\\"Describa brevemente (500 caracteres) la oferta de valor de su organización:\\\" formControlName=\\\"descripcion_oferta_valor\\\"  rows=\\\"5\\\"></textarea>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('descripcion_oferta_valor').errors&&empresaForm.get('descripcion_oferta_valor').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('descripcion_oferta_valor').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 500 caracteres</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Sectores atendidos por su organización <small>Si desea modificarlos, seleccione en la sección siguiente</small></mat-label>\\n              <mat-select multiple formControlName=\\\"sectores_atendidos\\\">\\n                <mat-option *ngFor=\\\"let sector of sectoresA\\\" [value]=\\\"sector.nombre_sector\\\">{{sector.nombre_sector}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('sectores_atendidos').errors&&empresaForm.get('sectores_atendidos').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('sectores_atendidos').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <textarea matInput placeholder=\\\"Menciona los 5 Principales clientes de su empresa separados por coma\\\" formControlName=\\\"clientes_sectores\\\"></textarea>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('clientes_sectores').errors&&empresaForm.get('clientes_sectores').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('clientes_sectores').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Organizaciónes empresariales en las que participa y/o está afiliado</mat-label>\\n              <mat-select multiple formControlName=\\\"orgs_afiliado\\\">\\n                <mat-option *ngFor=\\\"let org of organizacionesEmp\\\" [value]=\\\"org.id_cat_oe\\\">{{org.nombre_orgemp}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <h1 class=\\\"lead\\\">Alcance territorial de la oferta de tus servicios.</h1>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12 m-auto\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Nacional (Seleccione qué estados de México)</mat-label>\\n              <mat-select multiple formControlName=\\\"c_nacional\\\">\\n                <mat-option value=\\\"Toda la república(México)\\\">Toda la república(México)</mat-option>\\n                <mat-option *ngFor=\\\"let estado of estados\\\" [value]=\\\"estado.nombre_estado\\\">{{estado.nombre_estado}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('c_nacional').errors&&empresaForm.get('c_nacional').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('c_nacional').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12 m-auto\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Internacional (Seleccione qué paises)</mat-label>\\n              <mat-select multiple formControlName=\\\"c_internacional\\\">\\n                <mat-option *ngFor=\\\"let pais of paises\\\" [value]=\\\"pais.nombre_pais\\\">{{pais.nombre_pais}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('c_internacional').errors&&empresaForm.get('c_internacional').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('c_internacional').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-right\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px; width: 100px;\\\" [disabled]=\\\"empresaForm.invalid\\\">Actualizar</button>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"offset-lg-5 col-lg-1 offset-md-5 col-md-1 offset-sm-4 col-sm-2\\\">\\n            <mat-spinner *ngIf=\\\"saving\\\"></mat-spinner>\\n            <h1 class=\\\"lead text-danger\\\" *ngIf=\\\"error\\\">Error en registro</h1>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<hr>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { SessionService } from 'src/app/services/session.service';\nimport { sectora } from 'src/app/interfaces/sectoresa.interface';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { Location } from '@angular/common';\nimport { EmpresaService } from 'src/app/services/empresa.service';\nimport { empresa_table } from 'src/app/interfaces/empresa_get.interface';\nimport { estado } from 'src/app/interfaces/estados.interface';\nimport { pais } from 'src/app/interfaces/paises.interface';\nimport { Select2OptionData } from 'ng-select2';\n\n@Component({\n  selector: 'app-editar-empresa',\n  templateUrl: './editar-empresa.component.html',\n  styleUrls: ['./editar-empresa.component.css']\n})\nexport class EditarEmpresaComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private session: SessionService,\n    private catalogosService: CatalogosService,\n    private location: Location,\n    private empresas: EmpresaService\n  ) {\n      this.getEmpresa(); \n   }\n\n  ngOnInit() {\n    this.getSectores();\n    this.getOrgs();\n    this.getEstados();\n    this.getPaises();\n  }\n\n  empresaForm: FormGroup;\n  cargando: boolean = true;\n  empresa: empresa_table;\n  sectoresA: sectora [];\n  sect: string[] = [];\n  org_emp: number[] = [];\n  organizacionesEmp: any[] = [];\n  estados:estado[];\n  paises:pais[];\n  esta: string[] = [];\n  pais: string[] = [];\n\n  url_regex = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n  not_wss = /^\\S/;\n\n  public estas2: Array<Select2OptionData>;\n\n  initForm(){\n    this.empresaForm =  this.fb.group({\n      nombre : [this.empresa.nombre,[Validators.maxLength(150),Validators.pattern(this.not_wss)]],\n      razon_social : [this.empresa.razon_social,[Validators.maxLength(150),Validators.pattern(this.not_wss)]],\n      rfc : [this.empresa.rfc,[Validators.minLength(12),Validators.maxLength(13),Validators.pattern(/^([A-Z,Ñ,&]{3,4}([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[A-Z|\\d]{3})$/)]],\n      fecha_creación : [this.empresa.fecha_creación.slice(0,10),[Validators.required]],\n      web : [this.empresa.web,[Validators.pattern(this.url_regex),Validators.maxLength(200)]],\n      linkedin : [this.empresa.linkedin,[Validators.maxLength(100), Validators.pattern(this.url_regex)]],\n      facebook : [this.empresa.facebook,[Validators.maxLength(100), Validators.pattern(this.url_regex)]],\n      twitter : [this.empresa.twitter,[Validators.maxLength(100), Validators.pattern(this.url_regex)]],\n      instagram : [this.empresa.instagram,[Validators.maxLength(100), Validators.pattern(this.url_regex)]],\n      descripcion_oferta_valor : [this.empresa.descripcion_oferta_valor,[Validators.maxLength(500),Validators.pattern(this.not_wss)]],\n      sectores_atendidos : [this.sect,[]],\n      clientes_sectores : [this.empresa.principales_clientes,[]],\n      orgs_afiliado : [this.org_emp,[]],\n      c_nacional : [this.esta,[]],\n      c_internacional : [this.pais,[]],\n      id_empresa : [this.session.getEmpresaId()],\n      id_cobertura : [this.empresa.cobertura.id_cobertura]\n    });\n    this.cargando = false;\n  }\n\n  getSectoresArray(){\n      this.sect = this.empresa.sectores_atendidos.slice(1,this.empresa.sectores_atendidos.length).split(',');\n  }\n  getPaisesArray(){\n    this.pais = this.empresa.cobertura.internacional.slice(1,this.empresa.sectores_atendidos.length).split(',');\n  }\n  getEstadosArray(){\n    this.esta = this.empresa.cobertura.nacional.slice(1,this.empresa.sectores_atendidos.length).split(',');\n  }\n  getOrgEmpArray(){\n    this.empresa.orgs_emp.forEach( e => {\n      this.org_emp.push(e.fk_id_org);\n    });\n  }\n  getSectores(){\n    this.catalogosService.getSectoresAntendidos().subscribe(\n      res => {\n        this.sectoresA = res;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  getOrgs(){\n    this.catalogosService.getOrgEmpresariales().subscribe(\n      res => {\n        this.organizacionesEmp = res;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  getEstados(){\n    this.catalogosService.getEstadosMex().subscribe(\n      res => {\n        this.estados =  res;\n        this.getEstadS2();\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n  getPaises(){\n    this.catalogosService.getPaises().subscribe(\n      res => {\n        this.paises =  res;\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n  getEmpresa(){\n    this.empresas.getEmpresaTable(this.session.getEmpresaId()).subscribe(\n      res => {\n        this.empresa = res;\n        console.log(res);\n        this.getSectoresArray();\n        this.getPaisesArray();\n        this.getEstadosArray();\n        this.getOrgEmpArray();\n        this.initForm();\n      },\n      err => {\n        console.error(err);\n      }\n    );   \n  }\n\n  return(){\n    this.location.back();\n  }\n\n  update(){\n    this.cargando = true;\n    this.empresas.update(this.empresaForm.value).subscribe(\n      res => {\n        this.cargando = false;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n  getEstadS2(){\n    this.estados.forEach( e => {\n      this.estas2.push({id: e.nombre_estado, text: e.nombre_estado});\n    })\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRhci9lZGl0YXItZXN0YXRpZmljYWNpb24vZWRpdGFyLWVzdGF0aWZpY2FjaW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n   \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Editar estratificación</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <form class=\\\"example-form\\\" [formGroup]=\\\"formEstat\\\" (ngSubmit)=\\\"update()\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Tamaño de la empresa (Personas)</mat-label>\\n                  <mat-select formControlName=\\\"tamaño_emp\\\">\\n                    <mat-option *ngFor=\\\"let obj of tamEmpresa\\\" [value]=\\\"obj.id_tam_emp\\\">{{obj.tamano_empresa}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n                  <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Nivel de ventas anuales</mat-label>\\n                    <mat-select formControlName=\\\"nivel_ventas\\\">\\n                      <mat-option *ngFor=\\\"let nvl of nivVentas\\\" [value]=\\\"nvl.id_niv_ven\\\">{{nvl.nivel_ventas}}</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Detalle de ventas empresas a <strong>solo</strong> en servicios y Productos de TI</mat-label>\\n                  <mat-select formControlName=\\\"nivel_ventas_sector\\\">\\n                    <mat-option *ngFor=\\\"let det of detVentas\\\" [value]=\\\"det.id_det_ven\\\">{{det.tamano_detven}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Software que utilizan actualmente para sus procesos en su organización</mat-label>\\n                  <mat-select formControlName=\\\"software\\\" multiple>\\n                    <mat-option *ngFor=\\\"let sw of tipoSw\\\" [value]=\\\"sw.id_cat_sw\\\">{{sw.nombre_sw}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Certificaciones principales con las que cuenta su organización</mat-label>\\n                  <mat-select formControlName=\\\"certificaciones\\\" multiple>\\n                    <mat-option *ngFor=\\\"let crts of certs\\\" [value]=\\\"crts.id_cat_cert\\\">{{crts.nombre_cert}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Sector al que pertenece</mat-label>\\n                  <mat-select formControlName=\\\"sector\\\">\\n                    <mat-option *ngFor=\\\"let sector of sectores\\\" [value]=\\\"sector.id_cat_sec\\\">{{sector.nombre_sector}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n                  <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Tipo de empresa</mat-label>\\n                    <mat-select formControlName=\\\"tipo\\\">\\n                      <mat-option *ngFor=\\\"let te of tipoEmpresa\\\" [value]=\\\"te.id_cat_te\\\">{{te.nombre_tipo}}</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 text-right\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px; width: 100px;\\\"  data-toggle=\\\"tooltip\\\" data-placement=\\\"left\\\" title=\\\"Tooltip on left\\\">Guardar</button>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"offset-lg-5 col-lg-1 offset-md-5 col-md-1 offset-sm-4 col-sm-2\\\">\\n                <mat-spinner *ngIf=\\\"saving\\\"></mat-spinner>\\n                <h1 class=\\\"lead text-danger\\\" *ngIf=\\\"error\\\">Error en registro</h1>\\n              </div>\\n            </div>\\n\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n        <div class=\\\"col\\\">\\n          <p class=\\\"lead text-center\\\">Información guardada.</p>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"finalizar()\\\">Siguiente</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { SessionService } from 'src/app/services/session.service';\nimport { EstatService } from 'src/app/services/estat.service';\nimport { Router } from '@angular/router';\nimport { estatificacion, estatificacion_table } from 'src/app/interfaces/estat.interface';\n\n@Component({\n  selector: 'app-editar-estatificacion',\n  templateUrl: './editar-estatificacion.component.html',\n  styleUrls: ['./editar-estatificacion.component.css']\n})\nexport class EditarEstatificacionComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private cats: CatalogosService,\n    private session: SessionService,\n    private estatService: EstatService,\n    private router: Router,\n    private location: Location\n  ) { }\n\n  formEstat: FormGroup;\n\n  ngOnInit( ) {\n    this.getCats();\n  }\n\n  tamEmpresa:any[];\n  nivVentas:any[];\n  detVentas:any[];\n  tipoSw:any[];\n  certs:any[];\n  sectores:any[];\n  tipoEmpresa:any[];\n  saving:boolean=false;\n  error:boolean=false;\n  guardado: boolean = false;\n  estat: estatificacion_table;\n\n  cargando: boolean = true;\n\n  certis:number[]=[];\n  software:number[]=[];\n\n  getCats(){\n    this.cats.getTamEmp().subscribe(\n      res => {\n        this.tamEmpresa = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getNivelVentas().subscribe(\n      res => {\n        this.nivVentas = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getDetalleVentas().subscribe(\n      res => {\n        this.detVentas = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getTipoSw().subscribe(\n      res => {\n        this.tipoSw = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getCertificaciones().subscribe(\n      res => {\n        this.certs = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getSectores().subscribe(\n      res => {\n        this.sectores = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getTipoEmp().subscribe(\n      res => {\n        this.tipoEmpresa = res;\n      },err => {\n        console.error(err);\n      }\n    );\n    setTimeout(() => {\n      this.getEstat();      \n    }, 1000);\n  }\n\n  update(){\n    this.cargando = true;\n    this.estatService.update(this.formEstat.value).subscribe(\n      res => this.cargando = false,\n      err => console.log(err)\n    );\n  }\n\n  getEstat(){\n    this.estatService.getTable(this.session.getEmpresaId()).subscribe(\n      res => {\n        this.estat = res;\n        this.getCertEmp();\n        this.getSoftEmp();\n        setTimeout(() => {\n          this.initForm();          \n        }, 1000);\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n  getCertEmp(){\n    this.estatService.getCertEmp(this.session.getEmpresaId()).subscribe(\n      res => {\n        res.forEach(e => {\n          this.certis.push(e.fk_id_cert);\n        })\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  getSoftEmp(){\n    this.estatService.getSoftEmp(this.session.getEmpresaId()).subscribe(\n      res => {\n        res.forEach(e => {\n          this.software.push(e.fk_id_sw);\n        })\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n  initForm(){\n    this.formEstat = this.fb.group({\n      tamaño_emp :[this.estat.fk_id_tamaño,[Validators.required]],\n      nivel_ventas :[this.estat.fk_id_nivel_ventas,[Validators.required]],\n      nivel_ventas_sector :[this.estat.fk_id_nivel_ventas,[Validators.required]],\n      software :[this.software,[Validators.required]],\n      certificaciones :[this.certis,[Validators.required]],\n      sector :[this.estat.fk_id_sector,[Validators.required]],\n      tipo :[this.estat.fk_id_tipo_empresa,[Validators.required]],\n      empresa_id : [this.session.getEmpresaId()],\n      id_estat_empresa : [this.estat.id_estat_empresa]\n    });\n\n    this.cargando = false;\n  }\n\n  return(){\n    this.location.back();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRhci9lZGl0YXItbWljdWVudGEvZWRpdGFyLW1pY3VlbnRhLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Editar mis datos</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"container\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n              <form [formGroup]=\\\"newUserForm\\\" (ngSubmit)=\\\"registrar()\\\">\\n\\n                <div class=\\\"row\\\">\\n                \\n                  <div class=\\\"col\\\">\\n                      <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput placeholder=\\\"Usuario (Utilice de 8 a 30 caracteres sin espacios)\\\" formControlName=\\\"nombre_usuario\\\" required>\\n                      </mat-form-field>\\n                      <div *ngIf=\\\"newUserForm.get('nombre_usuario').errors&&newUserForm.get('nombre_usuario').dirty\\\">\\n                        <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('required')\\\" class=\\\"text-danger\\\">El nombre de usuario es requerido</p>\\n                        <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 8 caracteres</p>\\n                        <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 30 caracteres</p>\\n                        <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('pattern')\\\" class=\\\"text-danger\\\">No se permiten espacios</p>\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"col\\\">\\n                      <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Contraseña (Minimo 6 caracteres sin espacios)\\\" formControlName=\\\"contraseña\\\" required>\\n                      </mat-form-field>\\n                      <div *ngIf=\\\"newUserForm.get('contraseña').errors&&newUserForm.get('contraseña').dirty\\\">\\n                        <p *ngIf=\\\"newUserForm.get('contraseña').hasError('required')\\\" class=\\\"text-danger\\\">La contraseña es requerida</p>\\n                        <p *ngIf=\\\"newUserForm.get('contraseña').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 6 caracteres</p>\\n                        <p *ngIf=\\\"newUserForm.get('contraseña').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 12 caracteres</p>\\n                        <p *ngIf=\\\"newUserForm.get('contraseña').hasError('pattern')\\\" class=\\\"text-danger\\\">No se permiten espacios</p>\\n                      </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Nombre(s)\\\" formControlName=\\\"nombres\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('nombres').errors&&newUserForm.get('nombres').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('nombres').hasError('required')\\\" class=\\\"text-danger\\\">El o los nombres son requeridos</p>\\n                      <p *ngIf=\\\"newUserForm.get('nombres').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 50 caracteres</p>            \\n                      <p *ngIf=\\\"newUserForm.get('nombres').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>            \\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Apellido(s)\\\" formControlName=\\\"apellidos\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('apellidos').errors&&newUserForm.get('apellidos').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('apellidos').hasError('required')\\\" class=\\\"text-danger\\\">El o los apellidos son requeridos</p>\\n                      <p *ngIf=\\\"newUserForm.get('apellidos').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 50 caracteres</p>            \\n                      <p *ngIf=\\\"newUserForm.get('apellidos').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>            \\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <mat-label>Puesto</mat-label>\\n                      <mat-select formControlName=\\\"fk_id_puesto\\\" required>\\n                        <mat-option *ngFor=\\\"let puesto of puestos\\\" [value]=\\\"puesto.id_puesto\\\">\\n                          {{puesto.nombre_puesto}}\\n                        </mat-option>\\n                      </mat-select>\\n                    </mat-form-field> \\n                    <div *ngIf=\\\"newUserForm.get('fk_id_puesto').errors&&newUserForm.get('fk_id_puesto').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('fk_id_puesto').hasError('required')\\\" class=\\\"text-danger\\\">El puesto es requerido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input type=\\\"text\\\" matInput placeholder=\\\"Télefono (Utilice de 10 a 20 caracteres númericos)\\\" formControlName=\\\"telefono\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('telefono').errors&&newUserForm.get('telefono').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('required')\\\" class=\\\"text-danger\\\">El télefono es requerido</p>\\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('pattern')\\\" class=\\\"text-danger\\\">Digite un télefono válido</p>\\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 10 caracteres</p>                        \\n                      <p *ngIf=\\\"newUserForm.get('telefono').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 20 caracteres</p>            \\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input type=\\\"email\\\" matInput placeholder=\\\"Correo de contacto\\\" formControlName=\\\"email\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"newUserForm.get('email').errors&&newUserForm.get('email').dirty\\\">\\n                      <p *ngIf=\\\"newUserForm.get('email').hasError('required')\\\" class=\\\"text-danger\\\">El correo es requerido</p>\\n                      <p *ngIf=\\\"newUserForm.get('email').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 30 caracteres</p>            \\n                      <p *ngIf=\\\"newUserForm.get('email').hasError('email')\\\" class=\\\"text-danger\\\">Digite un correo válido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"offset-lg-6 col-lg-6 col-md-12 col-sm-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary m-auto\\\" [disabled]=\\\"newUserForm.invalid\\\">Actualizar</button>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <mat-spinner class=\\\"mx-auto\\\" *ngIf=\\\"prs\\\"></mat-spinner>\\n                  </div>\\n                </div>\\n              </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { ContactoService } from 'src/app/services/contacto.service';\nimport { SessionService } from 'src/app/services/session.service';\nimport { puestos } from 'src/app/interfaces/puestos.interface';\nimport { contacto } from 'src/app/interfaces/contacto.interface';\n\n@Component({\n  selector: 'app-editar-micuenta',\n  templateUrl: './editar-micuenta.component.html',\n  styleUrls: ['./editar-micuenta.component.css']\n})\nexport class EditarMicuentaComponent implements OnInit {\n\n  constructor(\n    private location: Location,\n    private fb: FormBuilder, \n    private catServices:CatalogosService,\n    private contactoService:ContactoService,\n    private session: SessionService\n  ) { }\n\n  ngOnInit() {\n    this.getPuestos();\n    this.getColaborador();\n  }\n\n  newUserForm: FormGroup; \n  puestos:puestos[];\n  not_wss = /^\\S/;\n  cargando: boolean = true;\n  colaborador: contacto;\n\n  initForm(){\n    this.newUserForm =  this.fb.group({\n      nombre_usuario : [this.colaborador.nombre_usuario,[Validators.required,Validators.minLength(8),Validators.maxLength(30),Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      contraseña : [this.colaborador.contraseña,[Validators.required,Validators.minLength(6),Validators.maxLength(12),Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      nombres : [this.colaborador.nombres,[Validators.required,Validators.maxLength(50),Validators.pattern(this.not_wss)]],\n      apellidos : [this.colaborador.apellidos,[Validators.required,Validators.maxLength(50),Validators.pattern(this.not_wss)]],\n      fk_id_puesto : [this.colaborador.fk_id_puesto,[Validators.required]],\n      telefono : [this.colaborador.telefono,[Validators.required, Validators.pattern(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/),Validators.maxLength(20),Validators.minLength(10)]],\n      email : [this.colaborador.email,[Validators.required, Validators.email,Validators.maxLength(30)]],\n      tipo_usuario : [this.colaborador.tipo_usuario],\n      id_contacto: [this.colaborador.id_contacto]\n    });\n    this.cargando = false;\n  }\n\n  getColaborador(){\n    this.contactoService.getContacto(this.session.getContactoId()).subscribe(\n      res => {\n        this.colaborador = res;\n        this.initForm();\n      },\n      err => console.log(err)\n    );\n  }\n\n  getPuestos(){\n    this.catServices.getPuestos().subscribe(\n      res => {\n        this.puestos = res;\n      },\n      err => {\n        console.error(err);\n    });\n  }\n\n  registrar(){\n    this.cargando = true;\n    let formdata = this.newUserForm.value;\n    this.contactoService.updtColaborador(formdata).subscribe(\n      res => {\n        this.reloadSession(formdata.nombre_usuario,formdata.contraseña);\n      },\n      err => console.log(err)\n    )\n  }\n  return(){\n    this.location.back();\n  }\n\n  reloadSession(usr: string, psw: string){\n    let temp = { usr : usr, psw : psw};\n    this.session.login(temp).subscribe(\n      res => {\n        this.session.saveSession(res);\n        this.cargando = false;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRhci9lZGl0YXItcHJvZHVjdG8vZWRpdGFyLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Editar producto</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"container\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            \\n            <form class=\\\"example-form\\\" [formGroup]=\\\"formProducto\\\" (ngSubmit)=\\\"save()\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-8 col-md-6 col-sm-12\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Nombre producto\\\" required formControlName=\\\"nombre_producto\\\">\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"formProducto.get('nombre_producto').errors&&formProducto.get('nombre_producto').dirty\\\">\\n                      <p *ngIf=\\\"formProducto.get('nombre_producto').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                      <p *ngIf=\\\"formProducto.get('nombre_producto').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n                      <p *ngIf=\\\"formProducto.get('nombre_producto').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4 col-md-6 col-sm-12\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <mat-label>Tipo (Origen)</mat-label>\\n                      <mat-select formControlName=\\\"tipo\\\" (selectionChange)=\\\"tipoProd()\\\" required>\\n                        <mat-option *ngFor=\\\"let tipo of tipos\\\" [value]=\\\"tipo.id_tipo_prod\\\">{{tipo.tipo_producto}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"formProducto.get('tipo').errors&&formProducto.get('tipo').dirty\\\">\\n                      <p *ngIf=\\\"formProducto.get('tipo').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <textarea matInput placeholder=\\\"Descripción del producto\\\" formControlName=\\\"descripcion_producto\\\" required></textarea>                \\n                    </mat-form-field>\\n                    <div *ngIf=\\\"formProducto.get('descripcion_producto').errors&&formProducto.get('descripcion_producto').dirty\\\">\\n                      <p *ngIf=\\\"formProducto.get('descripcion_producto').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                      <p *ngIf=\\\"formProducto.get('descripcion_producto').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 500 caracteres</p>\\n                      <p *ngIf=\\\"formProducto.get('descripcion_producto').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <mat-label>Tecnológias que utiliza el producto</mat-label>\\n                      <mat-select multiple formControlName=\\\"tecnologias\\\" required>\\n                        <mat-option *ngFor=\\\"let tec of tecnologias\\\" [value]=\\\"tec.id_cat_tec\\\">{{tec.nombre_tecnologias}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"formProducto.get('tecnologias').errors&&formProducto.get('tecnologias').dirty\\\">\\n                      <p *ngIf=\\\"formProducto.get('tecnologias').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\" *ngIf=\\\"ocultar&&tercero\\\">\\n                  <div class=\\\"col-lg-8 col-md-6 col-sm-12\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Marca del producto\\\" formControlName=\\\"marca\\\">\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"formProducto.get('marca').errors&&formProducto.get('marca').dirty\\\">\\n                      <p *ngIf=\\\"formProducto.get('marca').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                      <p *ngIf=\\\"formProducto.get('marca').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n                      <p *ngIf=\\\"formProducto.get('marca').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4 col-md-6 col-sm-12\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Nivel de Partnership\\\" formControlName=\\\"nivel_partnership\\\">\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"formProducto.get('nivel_partnership').errors&&formProducto.get('nivel_partnership').dirty\\\">\\n                      <p *ngIf=\\\"formProducto.get('nivel_partnership').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\" *ngIf=\\\"ocultar&&propio\\\">\\n                  <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <mat-label>Posicionamiento en el mercado del producto</mat-label>\\n                      <mat-select formControlName=\\\"posicionamiento\\\">\\n                        <mat-option *ngFor=\\\"let pos of poss\\\" [value]=\\\"pos.id_cat_pos\\\">{{pos.posicionamiento}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"formProducto.get('posicionamiento').errors&&formProducto.get('posicionamiento').dirty\\\">\\n                      <p *ngIf=\\\"formProducto.get('posicionamiento').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                    </div>\\n                  </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Caso de éxito\\\" formControlName=\\\"caso_exito\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"formProducto.get('caso_exito').errors&&formProducto.get('caso_exito').dirty\\\">\\n                      <p *ngIf=\\\"formProducto.get('caso_exito').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                      <p *ngIf=\\\"formProducto.get('caso_exito').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n                    <mat-form-field class=\\\"w-100\\\">\\n                      <input matInput placeholder=\\\"Referencia del producto en producción\\\" formControlName=\\\"referencia\\\" required>\\n                    </mat-form-field>\\n                    <div *ngIf=\\\"formProducto.get('referencia').errors&&formProducto.get('referencia').dirty\\\">\\n                      <p *ngIf=\\\"formProducto.get('referencia').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                      <p *ngIf=\\\"formProducto.get('referencia').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n                    </div>\\n                  </div>\\n                </div>\\n        \\n                <div formArrayName=\\\"val_ind\\\">\\n        \\n                  <div *ngFor=\\\"let item of getValInd.controls; let pind = index\\\" [formGroupName]=\\\"pind\\\">\\n                    <div class=\\\"row\\\" *ngIf=\\\"pind>0\\\">\\n                      <div class=\\\"col text-right\\\">\\n                        <button class=\\\"btn btn-outline-dark btn-sm ml-auto\\\" (click)=\\\"delIndVal(pind)\\\" type=\\\"button\\\"  data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Eliminar Value Driver\\\">\\n                          <mat-icon>close</mat-icon>\\n                        </button>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n                        <mat-form-field class=\\\"w-100\\\">\\n                          <mat-label>Value Drivers</mat-label>\\n                          <mat-select formControlName=\\\"value_driver\\\" (selectionChange)=\\\"getIL(pind,pind)\\\">\\n                            <mat-option *ngFor=\\\"let v of vd\\\" [value]=\\\"v.id_value_divers\\\">{{v.value_driver}}</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </div>\\n          \\n                      <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n                        <mat-form-field class=\\\"w-100\\\">\\n                          <mat-label>Industry Levers</mat-label>\\n                          <mat-select formControlName=\\\"industry_lever\\\" multiple>\\n                            <mat-option *ngFor=\\\"let i of il[pind]\\\" [value]=\\\"i.industry_levers\\\">{{i.industry_levers}}</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\" *ngIf=\\\"sc\\\">\\n                  <div class=\\\"col\\\">\\n                    <button class=\\\"btn btn-outline-primary btn-sm ml-auto\\\" (click)=\\\"addIndVal()\\\" type=\\\"button\\\"  data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Añadir Value driver\\\">\\n                      <mat-icon>add_box</mat-icon>\\n                    </button>\\n                  </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12 text-right\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px; width: 100px;\\\" [disabled]=\\\"formProducto.invalid\\\">Guardar</button>\\n                  </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-12 text-left\\\">\\n                    <small class=\\\"text-danger\\\">*Campos requeridos<br>*Por el momento limitado a 5 value drivers por producto<br>*Inserción de productos uno por uno</small>\\n                  </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"offset-lg-5 col-lg-1 offset-md-5 col-md-1 offset-sm-4 col-sm-2\\\">\\n                    <mat-spinner *ngIf=\\\"saving\\\"></mat-spinner>\\n                    <h1 class=\\\"lead text-danger\\\" *ngIf=\\\"error\\\">Error en registro</h1>\\n                  </div>\\n                </div>\\n                \\n              </form>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { SessionService } from 'src/app/services/session.service';\nimport { ProductosService } from 'src/app/services/productos.service';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { producto_tabla, producto_tecnologias } from 'src/app/interfaces/productos.interface';\n\n@Component({\n  selector: 'app-editar-producto',\n  templateUrl: './editar-producto.component.html',\n  styleUrls: ['./editar-producto.component.css']\n})\nexport class EditarProductoComponent implements OnInit {\n\n  constructor(\n    private session: SessionService,\n    private router: Router,\n    private location: Location,\n    private prods: ProductosService,\n    private fb: FormBuilder,\n    private cats: CatalogosService,\n    private activatedRoute: ActivatedRoute\n  ) { \n  }\n\n  tipos:any[];\n  tecnologias:any[];\n  niveles:any[];\n  poss:any[];\n  vd:any[];\n  il:any[] = new Array(4);\n\n  cargando:boolean = true;\n  saving:boolean=false;\n  error:boolean=false;\n  ocultar: boolean = false;\n  propio: boolean = false;\n  tercero: boolean = false;\n  guardado: boolean = false;\n  sc: boolean = true;\n  not_wss = /^\\S/;\n\n  formProducto: FormGroup;\n\n  producto : producto_tabla = null;\n  tec_prod : producto_tecnologias[] = null;\n  tecs: number[] = [];\n  marca :  string = \"\";\n  id_marca :  string = \"\";\n\n  ngOnInit() {\n    this.getCats();\n    this.getProductoTable();\n  }\n  initForm(){\n    this.formProducto = this.fb.group({\n      nombre_producto : [this.producto.nombre,[Validators.required, Validators.maxLength(100), Validators.pattern(this.not_wss)]],\n      tipo : [this.producto.fk_id_origen,[Validators.required]],\n      descripcion_producto : [this.producto.descripcion,[Validators.required, Validators.maxLength(500), Validators.pattern(this.not_wss)]],\n      tecnologias : [this.tecs ,[Validators.required]],\n      marca : [this.marca,[Validators.maxLength(100), Validators.pattern(this.not_wss)]],\n      nivel_partnership : [this.producto.partnership,[]],\n      posicionamiento : [this.producto.fk_id_posicionamiento,[]],\n      val_ind : this.fb.array([\n        this.fb.group({\n          value_driver : [null,[Validators.required]],\n          industry_lever : [null,[Validators.required]]\n        })\n      ]),\n      caso_exito : [this.producto.caso_exito,[Validators.required, Validators.pattern(this.not_wss)]],\n      referencia : [this.producto.referencia,[Validators.required, Validators.pattern(this.not_wss)]],\n      fk_id_marca_nivelp :[this.producto.fk_id_marca_nivelp],\n      fk_id_posicionamiento : [this.producto.fk_id_posicionamiento],\n      id_producto : [this.producto.id_producto]\n    });\n    \n    this.getIndVal();\n    this.cargando = false;\n  }\n  getCats(){\n    this.cats.getTipoProd().subscribe(\n      res => {\n        this.tipos = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getTecnologias().subscribe(\n      res => {\n        this.tecnologias = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getNivelPS().subscribe(\n      res => {\n        this.niveles = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getPosicionamiento().subscribe(\n      res => {\n        this.poss = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getValueDrivers().subscribe(\n      res => {\n        /*for (let index = 0; index < 5; index++) {\n          this.vd.push(res);\n        }*/\n        this.vd = res;\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n  tipoProd(){\n    this.ocultar = true;\n    if(this.formProducto.value.tipo!==1){\n      this.tercero = true;\n      this.propio = false;\n    }else{\n      this.tercero = false;\n      this.propio = true;\n    }\n  }\n  save(){\n    let temp = this.formProducto.value;\n    temp.empresa_id = this.session.getEmpresaId(),\n    temp.contacto_id = this.session.getContactoId()\n    //temp.industry_lever = temp.industry_lever.join(', ');\n    this.saving = true;\n    this.prods.update(temp).subscribe(\n      res => {\n        console.log(res);\n        this.saving = false;\n      },\n      err => console.log(err)\n    );\n  }\n  finalizar(){\n    this.router.navigateByUrl('landing');\n  }\n  addOtro(){\n    document.getElementById('reset').click();\n    this.formProducto.enable();\n    this.ocultar = false;\n    this.propio = false;\n    this.tercero = false;\n    this.guardado = false;\n  }\n  get getValInd(){\n    return this.formProducto.get('val_ind') as FormArray;\n  }\n  addIndVal(){\n    const cntrs = <FormArray>this.formProducto.controls['val_ind'];\n    cntrs.push(this.fb.group({\n      value_driver : [null,[Validators.required]],\n      industry_lever : [null,[Validators.required]]\n    }));\n    if((<FormArray>this.formProducto.controls['val_ind']).length>4){\n      this.sc = false;      \n    }\n  }\n  delIndVal(pind: number){\n    const cntrs = <FormArray>this.formProducto.controls['val_ind'];\n    cntrs.removeAt(pind); \n    if(cntrs.length<5){\n      this.sc = true;\n    }\n  }\n  routerTo(r : string)\n  {\n    this.router.navigateByUrl(r);\n  }\n  getIL(pid: number, index: number){\n    this.cats.getIndustryLevers(this.formProducto.value.val_ind[index].value_driver).subscribe(\n      res => {\n        this.il[pid] = res;\n      },\n      err => {\n      }\n    );\n  }\n  getIL2(vd: number, pid: number){\n    this.cats.getIndustryLevers(vd).subscribe(\n      res => {\n        this.il[pid] = res;\n      },\n      err => {\n      }\n    );\n  }\n  return(){\n    this.location.back();\n  }\n  getProductoTable(){\n    this.prods.getProductoTabla(+this.activatedRoute.snapshot.paramMap.get(\"id\")).subscribe(\n      res => {\n        this.producto = res;\n        this.getTecnologias(this.producto.id_producto);\n        this.ocultar = true;\n        if(this.producto.fk_id_origen == 1){\n          this.propio = true;\n        }else{\n          this.getMarca(this.producto.fk_id_marca_nivelp);\n          this.tercero = true;\n        }\n        setTimeout(() => {\n          this.initForm()\n        }, 1000);\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  getTecnologias(id : number){\n    this.prods.getTecnologiaProducto(id).subscribe(\n      res => {\n        res.forEach(e => {\n          this.tecs.push(e.fk_id_tecnologia);\n        });\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  getMarca(id : number){\n    this.prods.getMarca(id).subscribe(\n      res => {\n        this.marca = res.marca;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  getIndVal(){\n    this.prods.getValIndTable(+this.activatedRoute.snapshot.paramMap.get(\"id\")).subscribe(\n      res => {\n        let temp = [\n          { value_driver : res[0].id_val, industry_lever : res[0].industry_levers.split(\", \")}\n        ];\n        this.getIL2(res[0].id_val,0);\n        for(let i = 1; i < res.length; i++){\n          if(!(res[i]==null)){\n            temp.push({ value_driver : res[i].id_val, industry_lever : res[i].industry_levers.split(\", \")});\n            this.addIndVal();\n            this.getIL2(res[i].id_val,i);\n          }\n        }\n        this.formProducto.patchValue({val_ind : temp});\n      },\n      err => console.error(err)\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsaW1pbmFyL2VsaW1pbmFyLWNvbGFib3JhZG9yL2VsaW1pbmFyLWNvbGFib3JhZG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1 class=\\\"display-4\\\"><a role=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"return()\\\"><mat-icon>arrow_back</mat-icon></a></h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1 class=\\\"display-4 text-med\\\">Eliminar</h1>\\n    </div>\\n  </div>\\n  <hr> \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col mx-auto\\\">\\n      <div class=\\\"text-center\\\">\\n        <h1 class=\\\"lead\\\">¿Desea eliminar a este colaborador?</h1>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-right\\\">\\n      <button class=\\\"btn btn-primary mx-auto\\\" style=\\\"width: 100px\\\" (click)=\\\"return()\\\">NO</button>\\n    </div>\\n    <div class=\\\"col text-left\\\">\\n      <button class=\\\"btn btn-danger mx-auto\\\" style=\\\"width: 100px\\\" (click)=\\\"eliminar()\\\">SI</button>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { ContactoService } from 'src/app/services/contacto.service';\n\n@Component({\n  selector: 'app-eliminar-colaborador',\n  templateUrl: './eliminar-colaborador.component.html',\n  styleUrls: ['./eliminar-colaborador.component.css']\n})\nexport class EliminarColaboradorComponent implements OnInit {\n\n  constructor(\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private contactos: ContactoService\n  ) { }\n\n  cargando: boolean = false;\n\n  ngOnInit() {\n  }\n\n  return(){\n    this.location.back();\n  }\n\n  eliminar(){\n    this.contactos.delColaborador(+this.activatedRoute.snapshot.paramMap.get(\"id\")).subscribe(\n      res => {\n        this.return();\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsaW1pbmFyL2VsaW1pbmFyLWRpcmVjY2lvbi9lbGltaW5hci1kaXJlY2Npb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1 class=\\\"display-4\\\"><a role=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"return()\\\"><mat-icon>arrow_back</mat-icon></a>Eliminar</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col mx-auto\\\">\\n      <div class=\\\"text-center\\\">\\n        <h1 class=\\\"lead\\\">¿Desea eliminar esta dirección?</h1>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-right\\\">\\n      <button class=\\\"btn btn-primary mx-auto\\\" style=\\\"width: 100px\\\" (click)=\\\"return()\\\">NO</button>\\n    </div>\\n    <div class=\\\"col text-left\\\">\\n      <button class=\\\"btn btn-danger mx-auto\\\" style=\\\"width: 100px\\\" (click)=\\\"eliminar()\\\">SI</button>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { DireccionesService } from 'src/app/services/direcciones.service';\n\n@Component({\n  selector: 'app-eliminar-direccion',\n  templateUrl: './eliminar-direccion.component.html',\n  styleUrls: ['./eliminar-direccion.component.css']\n})\nexport class EliminarDireccionComponent implements OnInit {\n\n  constructor(\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private direcciones: DireccionesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  cargando: boolean = false;\n\n  return(){\n    this.location.back();\n  }\n\n  //+this.activatedRoute.snapshot.paramMap.get(\"id\");\n  eliminar(){\n    this.direcciones.delete(+this.activatedRoute.snapshot.paramMap.get(\"id\")).subscribe(\n      res => {\n        console.log(res);\n        this.return();\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsaW1pbmFyL2VsaW1pbmFyLXByb2R1Y3RvL2VsaW1pbmFyLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1 class=\\\"display-4\\\"><a role=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"return()\\\"><mat-icon>arrow_back</mat-icon></a>Eliminar</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col mx-auto\\\">\\n      <div class=\\\"text-center\\\">\\n        <h1 class=\\\"lead\\\">¿Desea eliminar este producto?</h1>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-right\\\">\\n      <button class=\\\"btn btn-primary mx-auto\\\" style=\\\"width: 100px\\\" (click)=\\\"return()\\\">NO</button>\\n    </div>\\n    <div class=\\\"col text-left\\\">\\n      <button class=\\\"btn btn-danger mx-auto\\\" style=\\\"width: 100px\\\" (click)=\\\"eliminar()\\\">SI</button>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ProductosService } from 'src/app/services/productos.service';\n\n@Component({\n  selector: 'app-eliminar-producto',\n  templateUrl: './eliminar-producto.component.html',\n  styleUrls: ['./eliminar-producto.component.css']\n})\nexport class EliminarProductoComponent implements OnInit {\n\n  constructor(\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private producto: ProductosService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  cargando: boolean = false;\n\n  return(){\n    this.location.back();\n  }\n\n  //+this.activatedRoute.snapshot.paramMap.get(\"id\");\n  eliminar(){\n    this.producto.delete(+this.activatedRoute.snapshot.paramMap.get(\"id\")).subscribe(\n      res => {\n        this.return();\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n\n","module.exports = \".bg-div{\\r\\n    background-color:#0E273B;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksd0JBQXdCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJnLWRpdntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzBFMjczQjtcclxufSJdfQ== */\"","module.exports = \"\\n<div class=\\\"text-center mb-auto bg-div footer\\\">\\n  <small class=\\\"text-light\\\">Copyright 2019 N.L. 4.0 ©  v0.1.0</small><br>\\n  <small class=\\\"text-light\\\">Desarrollado en conjunto por <a href=\\\"http://www.tecnoap.com\\\">Tecnoap</a> & <a href=\\\"https://www.linkedin.com/in/raul-carvajal-b9904516a/\\\">Raúl Carvajal</a></small>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".md-select-menu-container {\\r\\n    z-index: 1101 !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9ybXMvZm9ybS1kaXJlY2Npb25lcy9mb3JtLWRpcmVjY2lvbmVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9mb3Jtcy9mb3JtLWRpcmVjY2lvbmVzL2Zvcm0tZGlyZWNjaW9uZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZC1zZWxlY3QtbWVudS1jb250YWluZXIge1xyXG4gICAgei1pbmRleDogMTEwMSAhaW1wb3J0YW50O1xyXG59Il19 */\"","module.exports = \"<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <h1 class=\\\"display-4\\\">Ubicación de la/s oficinas de la empresa</h1>\\n    </div>\\n  </div>\\n  <form [formGroup]=\\\"dirForm\\\" (ngSubmit)=\\\"saveDirs()\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12 col-md-9 col-lg-8\\\">\\n        <mat-form-field class=\\\"w-100\\\">\\n          <input matInput placeholder=\\\"Dirección\\\" formControlName=\\\"direccion\\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"dirForm.get('direccion').errors&&dirForm.get('direccion').dirty\\\">\\n          <p *ngIf=\\\"dirForm.get('direccion').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 150 caracteres</p>\\n          <p *ngIf=\\\"dirForm.get('direccion').hasError('required')\\\" class=\\\"text-danger\\\">Este campo requerido</p>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-12 col-md-3 col-lg-4\\\">\\n        <mat-form-field class=\\\"w-100\\\">\\n          <mat-label>Tipo de sede</mat-label>\\n          <mat-select formControlName=\\\"tipo_sede\\\" class=\\\"md-select-menu-container\\\">\\n            <mat-option *ngFor=\\\"let ts of tipo_sede\\\" [value]=\\\"ts.id_cat_sede\\\">{{ts.tipo_sede}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <div *ngIf=\\\"dirForm.get('tipo_sede').errors&&dirForm.get('tipo_sede').dirty\\\">\\n          <p *ngIf=\\\"dirForm.get('tipo_sede').hasError('required')\\\" class=\\\"text-danger\\\">Este campo requerido</p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12 col-md-4 col-lg-4\\\">\\n        <mat-form-field class=\\\"w-100\\\">\\n          <mat-label>País</mat-label>\\n          <mat-select formControlName=\\\"pais\\\" class=\\\"md-select-menu-container\\\">\\n            <mat-option *ngFor=\\\"let pais of paises\\\" [value]=\\\"pais.nombre\\\">{{pais.nombre}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <div *ngIf=\\\"dirForm.get('pais').errors&&dirForm.get('pais').dirty\\\">\\n          <p *ngIf=\\\"dirForm.get('pais').hasError('required')\\\" class=\\\"text-danger\\\">Este campo requerido</p>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-12 col-md-4 col-lg-4\\\">\\n        <mat-form-field class=\\\"w-100\\\">\\n          <mat-label>Estado / Provincia / Departamento</mat-label>\\n          <mat-select formControlName=\\\"estado\\\" (selectionChange)=\\\"getMunicipio()\\\" class=\\\"md-select-menu-container\\\">\\n            <mat-option *ngFor=\\\"let estado of estados\\\" [value]=\\\"estado.id_estado\\\">{{estado.nombre_estado}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"col-sm-12 col-md-4 col-lg-4\\\">\\n        <mat-form-field class=\\\"w-100\\\">\\n          <!--<input matInput placeholder=\\\"Municipio\\\" formControlName=\\\"municipio\\\">-->\\n          <mat-label>Municipio</mat-label>\\n          <mat-select formControlName=\\\"municipio\\\" class=\\\"md-select-menu-container\\\">\\n            <mat-option *ngFor=\\\"let municipio of municipios\\\" [value]=\\\"municipio.nombre_municipio\\\">{{municipio.nombre_municipio}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <div *ngIf=\\\"dirForm.get('municipio').errors&&dirForm.get('municipio').dirty\\\">\\n          <p *ngIf=\\\"dirForm.get('municipio').hasError('required')\\\" class=\\\"text-danger\\\">Este campo requerido</p>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"!guardado\\\">\\n      <div class=\\\"col-12 text-right\\\">\\n        <button type=\\\"reset\\\" id=\\\"reset\\\" class=\\\"btn btn-danger\\\" style=\\\"width: 100px;\\\">Limpiar</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px; width: 100px;\\\" [disabled]=\\\"dirForm.invalid\\\">Guardar</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 text-left\\\">\\n        <small class=\\\"text-danger\\\">\\n          <strong>\\n            * TODOS LOS CAMPOS SON REQUERIDOS<br> \\n            * POR EL MOMENTO SOLO DISPONIBLE MÉXICO<br>\\n            * SOLO PUEDE EXISTIR UNA DIRECCION FISCAL\\n          </strong>\\n        </small>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"offset-lg-5 col-lg-1 offset-md-5 col-md-1 offset-sm-4 col-sm-2\\\">\\n        <mat-spinner *ngIf=\\\"saving\\\"></mat-spinner>\\n        <h1 class=\\\"lead text-danger\\\" *ngIf=\\\"error\\\">Error en registro</h1>\\n      </div>\\n    </div>\\n  </form>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n    <div class=\\\"col\\\">\\n      <p class=\\\"lead text-center\\\">Dirección guardada.</p>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n    <div class=\\\"offset-lg-4 offset-md-4 offset-sm-2 col-lg-2 col-md-2 col-sm-2\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary w-100\\\" (click)=\\\"addOtro()\\\">Registrar otro</button>\\n    </div>\\n    <div class=\\\"col-lg-2 col-md-2 col-sm-2\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-success w-100\\\" (click)=\\\"finalizar()\\\">Finalizar</button>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\" *ngIf=\\\"!nulldirs\\\">\\n    <div class=\\\"col\\\">\\n      <strong>Direcciónes guardadas:</strong>\\n      <div>\\n        <ul class=\\\"list-group list-group-sm\\\">\\n          <li class=\\\"list-group-item\\\" *ngFor=\\\"let dir of direcciones\\\">\\n            {{dir.direccion}}, {{dir.municipio}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { DISABLED } from '@angular/forms/src/model';\nimport { estado } from 'src/app/interfaces/estados.interface';\nimport { municipio } from 'src/app/interfaces/municipios.interface';\nimport { SessionService } from 'src/app/services/session.service';\nimport { DireccionesService } from 'src/app/services/direcciones.service';\nimport { Router } from '@angular/router';\nimport { direccion_get } from 'src/app/interfaces/direcciones_get.interface';\n\n@Component({\n  selector: 'app-form-direcciones',\n  templateUrl: './form-direcciones.component.html',\n  styleUrls: ['./form-direcciones.component.css']\n})\nexport class FormDireccionesComponent implements OnInit {\n \n  constructor(\n    private fb: FormBuilder,\n    private catalogos: CatalogosService,\n    private session: SessionService,\n    private direccionesService: DireccionesService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.dirForm = this.fb.group({\n      direccion : ['',[Validators.required, Validators.maxLength(150)]],\n      tipo_sede : ['',[Validators.required]],\n      pais : ['México',[Validators.required]],\n      estado : ['',[Validators.required]],\n      municipio : ['',[Validators.required]],\n    });\n      /*\n      empresa_id : this.session.getEmpresaId(),\n      contacto_id : this.session.getContactoId()*/\n    this.getTipoSede();\n    this.getEstados();\n    this.getDirs();\n  }\n\n  dirForm: FormGroup;\n  tipo_sede: any[];\n  paises:any[] = [\n    { 'nombre' : 'México'}\n  ];\n  estados: estado[];\n  municipios: municipio[];\n  saving:boolean=false;\n  error:boolean=false;\n  ocultar: boolean = false;\n  guardado: boolean = false;\n  exdirfis: boolean = false;\n\n  direcciones:direccion_get[];\n  nulldirs: boolean = true;\n\n\n  get getDirecciones(){ \n    return this.dirForm.get('direcciones') as FormArray;\n  }\n  getTipoSede(){\n    this.catalogos.getTipoSede().subscribe(\n      res => {\n        this.tipo_sede = res;\n        this.existeDirFiscal();\n      },\n      err => {\n        console.error(err)\n      }\n    );\n  }\n  getEstados(){\n    this.catalogos.getEstadosMex().subscribe(\n      res => {\n        this.estados =  res;\n      }, err => {\n        console.error(err);\n      }\n    );\n  }\n  getMunicipio(){\n    this.catalogos.getMunicipiosMex(this.dirForm.value.estado).subscribe(\n      res => {\n        this.municipios =  res;\n      }, err => {\n        console.log(err);\n      }\n    );\n  } \n  saveDirs(){\n    let temp = this.dirForm.value;\n    temp.empresa_id = this.session.getEmpresaId(),\n    temp.contacto_id = this.session.getContactoId()\n    temp.estado = this.getEstadoById();\n    this.saving = true;\n    this.direccionesService.save(this.dirForm.value).subscribe(\n      res => {\n        document.getElementById('reset').click();\n        this.session.updateSession();\n        this.saving = false;\n        this.dirForm.disable();\n        this.guardado = true;\n        this.existeDirFiscal();\n        this.getDirs();\n      },\n      err => {\n        this.error=true;\n        console.error(err);\n      }\n    );\n  }\n  finalizar(){\n    this.router.navigateByUrl('landing');\n  }\n  getEstadoById(){\n    return this.estados.find(e => { return e.id_estado > this.dirForm.value.estado-1; }).nombre_estado;\n  }\n  addOtro(){\n    this.ocultar = false;\n    this.guardado = false;\n    this.dirForm.enable();\n  }\n  existeDirFiscal(){\n    this.direccionesService.existeDirFiscal(this.session.getEmpresaId()).subscribe(\n      res => {\n        console.log(res);\n        if(this.tipo_sede.length == 3){\n          res ? console.log(this.tipo_sede.shift()) : null;\n        }\n      },\n      err => { \n        console.error(err);\n      }\n    );\n  }\n  getDirs(){\n    this.direccionesService.get(this.session.getEmpresaId()).subscribe(\n      res => {\n        this.direcciones = res;\n        if(this.direcciones.length != 0){\n          this.nulldirs = false;\n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL2Zvcm0tZW1wcmVzYS9mb3JtLWVtcHJlc2EuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <h1 class=\\\"display-4\\\">Datos Empresa</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\"> \\n      <form class=\\\"example-form\\\" [formGroup]=\\\"empresaForm\\\" (ngSubmit)=\\\"saveEmpresa()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <input matInput placeholder=\\\"Nombre Empresa\\\" formControlName=\\\"nombre\\\" required>\\n              </mat-form-field>\\n              <div *ngIf=\\\"empresaForm.get('nombre').errors&&empresaForm.get('nombre').dirty\\\">\\n                <p *ngIf=\\\"empresaForm.get('nombre').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                <p *ngIf=\\\"empresaForm.get('nombre').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 150 caracteres</p>\\n                <p *ngIf=\\\"empresaForm.get('nombre').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con un espacio</p>\\n              </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Razón social\\\" formControlName=\\\"razon_social\\\" required>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('razon_social').errors&&empresaForm.get('razon_social').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('razon_social').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"empresaForm.get('razon_social').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 150 caracteres</p>\\n              <p *ngIf=\\\"empresaForm.get('razon_social').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con un espacio</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <input matInput placeholder=\\\"RFC\\\" formControlName=\\\"rfc\\\" required>\\n              </mat-form-field>\\n              <div *ngIf=\\\"empresaForm.get('rfc').errors&&empresaForm.get('rfc').dirty\\\">\\n                <p *ngIf=\\\"empresaForm.get('rfc').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n                <p *ngIf=\\\"empresaForm.get('rfc').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 13 caracteres</p>\\n                <p *ngIf=\\\"empresaForm.get('rfc').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 12 caracteres</p>\\n                <p *ngIf=\\\"empresaForm.get('rfc').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con el formato de un RFC</p>\\n              </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Fecha de creación\\\" formControlName=\\\"fecha_creación\\\" required>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker></mat-datepicker>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('fecha_creación').errors&&empresaForm.get('fecha_creación').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('fecha_creación').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <h1 class=\\\"lead\\\">Participación en las redes sociales</h1>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <input matInput placeholder=\\\"Web de la Empresa\\\" formControlName=\\\"web\\\">\\n              </mat-form-field>\\n              <div *ngIf=\\\"empresaForm.get('web').errors&&empresaForm.get('web').dirty\\\">\\n                <p *ngIf=\\\"empresaForm.get('web').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n                <p *ngIf=\\\"empresaForm.get('web').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n              </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Linkedin (Liga a su perfil)\\\" formControlName=\\\"linkedin\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('linkedin').errors&&empresaForm.get('linkedin').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('linkedin').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n              <p *ngIf=\\\"empresaForm.get('linkedin').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Facebook (Liga a su perfil)\\\" formControlName=\\\"facebook\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('facebook').errors&&empresaForm.get('facebook').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('facebook').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n              <p *ngIf=\\\"empresaForm.get('facebook').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Twitter (Liga a su perfil)\\\" formControlName=\\\"twitter\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('twitter').errors&&empresaForm.get('twitter').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('twitter').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n              <p *ngIf=\\\"empresaForm.get('twitter').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Instagram (Liga a su perfil)\\\" formControlName=\\\"instagram\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('instagram').errors&&empresaForm.get('instagram').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('instagram').hasError('pattern')\\\" class=\\\"text-danger\\\">No coincide con una URL válida</p>\\n              <p *ngIf=\\\"empresaForm.get('instagram').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <h1 class=\\\"lead\\\">Datos adicionales</h1>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <textarea matInput placeholder=\\\"Describa brevemente (500 caracteres) la oferta de valor de su organización:\\\" formControlName=\\\"descripcion_oferta_valor\\\" rows=\\\"5\\\" required></textarea>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('descripcion_oferta_valor').errors&&empresaForm.get('descripcion_oferta_valor').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('descripcion_oferta_valor').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 500 caracteres</p>\\n              <p *ngIf=\\\"empresaForm.get('descripcion_oferta_valor').hasError('required')\\\" class=\\\"text-danger\\\">Campo requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Sectores atendidos por su organización</mat-label>\\n              <mat-select multiple formControlName=\\\"sectores_atendidos\\\" required>\\n                <mat-option *ngFor=\\\"let sector of sectoresA\\\" [value]=\\\"sector.nombre_sector\\\">{{sector.nombre_sector}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('sectores_atendidos').errors&&empresaForm.get('sectores_atendidos').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('sectores_atendidos').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <textarea matInput placeholder=\\\"Menciona los 5 Principales clientes de su empresa separados por coma\\\" formControlName=\\\"clientes_sectores\\\" required></textarea>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('clientes_sectores').errors&&empresaForm.get('clientes_sectores').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('clientes_sectores').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Organizaciónes empresariales en las que participa y/o está afiliado</mat-label>\\n              <mat-select multiple formControlName=\\\"orgs_afiliado\\\">\\n                <mat-option *ngFor=\\\"let org of organizacionesEmp\\\" [value]=\\\"org.id_cat_oe\\\">{{org.nombre_orgemp}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <!--<div class=\\\"col-lg-4 col-md-4 col-sm-6\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Otra\\\" formControlName=\\\"linkedin\\\">\\n            </mat-form-field>\\n          </div>-->\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <h1 class=\\\"lead\\\">Alcance territorial de la oferta de tus servicios.</h1>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12 m-auto\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Nacional (Seleccione qué estados de México)</mat-label>\\n              <mat-select multiple formControlName=\\\"c_nacional\\\" required>\\n                <mat-option value=\\\"Toda la república(México)\\\">Toda la república(México)</mat-option>\\n                <mat-option *ngFor=\\\"let estado of estados\\\" [value]=\\\"estado.nombre_estado\\\">{{estado.nombre_estado}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('c_nacional').errors&&empresaForm.get('c_nacional').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('c_nacional').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12 m-auto\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Internacional (Seleccione qué paises)</mat-label>\\n              <mat-select multiple formControlName=\\\"c_internacional\\\" required>\\n                <mat-option *ngFor=\\\"let pais of paises\\\" [value]=\\\"pais.nombre_pais\\\">{{pais.nombre_pais}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"empresaForm.get('c_internacional').errors&&empresaForm.get('c_internacional').dirty\\\">\\n              <p *ngIf=\\\"empresaForm.get('c_internacional').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div> \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-right\\\">\\n            <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" style=\\\"width: 100px;\\\">Limpiar</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px; width: 100px;\\\" [disabled]=\\\"empresaForm.invalid\\\">Guardar</button>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"offset-lg-5 col-lg-1 offset-md-5 col-md-1 offset-sm-4 col-sm-2\\\">\\n            <mat-spinner *ngIf=\\\"saving\\\"></mat-spinner>\\n            <h1 class=\\\"lead text-danger\\\" *ngIf=\\\"error\\\">Error en registro</h1>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n    <div class=\\\"col\\\">\\n      <p class=\\\"lead text-center\\\">Información guardada.</p>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n    <div class=\\\"mx-auto\\\">\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"finalizar()\\\">Siguiente</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <small class=\\\"text-danger\\\">* Campos requeridos</small>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { sectora } from 'src/app/interfaces/sectoresa.interface';\nimport { organizacion } from 'src/app/interfaces/organizaciones.interface';\nimport { estado } from 'src/app/interfaces/estados.interface';\nimport { pais } from 'src/app/interfaces/paises.interface';\nimport { SessionService } from 'src/app/services/session.service';\nimport { EmpresaService } from 'src/app/services/empresa.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-form-empresa',\n  templateUrl: './form-empresa.component.html',\n  styleUrls: ['./form-empresa.component.css']\n})\nexport class FormEmpresaComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private catalogosService: CatalogosService,\n    private session: SessionService,\n    private empresa: EmpresaService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.empresaForm =  this.fb.group({\n      nombre : ['',[Validators.required,Validators.maxLength(150),Validators.pattern(this.not_wss)]],\n      razon_social : ['',[Validators.required,Validators.maxLength(150),Validators.pattern(this.not_wss)]],\n      rfc : ['',[Validators.required,Validators.minLength(12),Validators.maxLength(13),Validators.pattern(/^([A-Z,Ñ,&]{3,4}([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[A-Z|\\d]{3})$/)]],\n      fecha_creación : ['',[Validators.required]],\n      web : ['',[Validators.pattern(this.url_regex),Validators.maxLength(200)]],\n      linkedin : ['',[Validators.maxLength(100), Validators.pattern(this.url_regex)]],\n      facebook : ['',[Validators.maxLength(100), Validators.pattern(this.url_regex)]],\n      twitter : ['',[Validators.maxLength(100), Validators.pattern(this.url_regex)]],\n      instagram : ['',[Validators.maxLength(100), Validators.pattern(this.url_regex)]],\n      descripcion_oferta_valor : ['',[Validators.required,Validators.maxLength(500)]],\n      sectores_atendidos : ['',[Validators.required]],\n      clientes_sectores : ['',[Validators.required]],\n      orgs_afiliado : ['',[]],\n      c_nacional : ['',[Validators.required]],\n      c_internacional : ['',[Validators.required]],\n      fk_id_contacto : [this.session.getContactoId()]\n    });\n\n    this.getSectoresA();\n    this.getOrgEmp();\n    this.getEstados();\n    this.getPaises();\n  }\n\n  empresaForm: FormGroup;\n  sectoresA:sectora[];\n  organizacionesEmp:organizacion[];\n  estados:estado[];\n  paises:pais[];\n  saving:boolean=false;\n  error:boolean=false;\n  guardado: boolean = false;\n  url_regex = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n\n  //url_regex = /^([a-z][a-z0-9\\*\\-\\.]*):\\/\\/(?:(?:(?:[\\w\\.\\-\\+!$&'\\(\\)*\\+,;=]|%[0-9a-f]{2})+:)*(?:[\\w\\.\\-\\+%!$&'\\(\\)*\\+,;=]|%[0-9a-f]{2})+@)?(?:(?:[a-z0-9\\-\\.]|%[0-9a-f]{2})+|(?:\\[(?:[0-9a-f]{0,4}:)*(?:[0-9a-f]{0,4})\\]))(?::[0-9]+)?(?:[\\/|\\?](?:[\\w#!:\\.\\?\\+=&@!$'~*,;\\/\\(\\)\\[\\]\\-]|%[0-9a-f]{2})*)?$/;\n  not_wss = /^\\S/;\n\n  getSectoresA(){\n    this.catalogosService.getSectoresAntendidos().subscribe(\n      res => {\n        this.sectoresA =  res;\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n  getOrgEmp(){\n    this.catalogosService.getOrgEmpresariales().subscribe(\n      res => {\n        this.organizacionesEmp =  res;\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n  getEstados(){\n    this.catalogosService.getEstadosMex().subscribe(\n      res => {\n        this.estados =  res;\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n  getPaises(){\n    this.catalogosService.getPaises().subscribe(\n      res => {\n        this.paises =  res;\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n\n\n  saveEmpresa(){\n    this.saving = true;\n    console.log(this.empresaForm.value);\n    this.empresa.add(this.empresaForm.value).subscribe(\n      res => {\n        this.session.updateSession();\n        localStorage.setItem('idempresa' , res.id);\n        this.saving = false;\n        this.empresaForm.disable();\n        this.guardado = true;\n      },\n      err => {\n        this.error=true;\n        console.error(err);\n      }\n    );\n  }\n\n  finalizar(){\n    this.router.navigateByUrl('landing');\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL2Zvcm0tZXN0YXRpZmljYWNpb24vZm9ybS1lc3RhdGlmaWNhY2lvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n        <h1 class=\\\"display-4\\\">Estratificación de Empresa según Secretaria de economía</h1>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n        <form class=\\\"example-form\\\" [formGroup]=\\\"formEstat\\\" (ngSubmit)=\\\"save()\\\">\\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <mat-label>Tamaño de la empresa (Personas)</mat-label>\\n                <mat-select required formControlName=\\\"tamaño_emp\\\">\\n                  <mat-option *ngFor=\\\"let obj of tamEmpresa\\\" [value]=\\\"obj.id_tam_emp\\\">{{obj.tamano_empresa}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Nivel de ventas anuales</mat-label>\\n                  <mat-select required formControlName=\\\"nivel_ventas\\\">\\n                    <mat-option *ngFor=\\\"let nvl of nivVentas\\\" [value]=\\\"nvl.id_niv_ven\\\">{{nvl.nivel_ventas}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <mat-label>Detalle de ventas a empresas <strong>solo</strong> en servicios y Productos de TI</mat-label>\\n                <mat-select required formControlName=\\\"nivel_ventas_sector\\\">\\n                  <mat-option *ngFor=\\\"let det of detVentas\\\" [value]=\\\"det.id_det_ven\\\">{{det.tamano_detven}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Software que utilizan actualmente para sus procesos en su organización</mat-label>\\n                  <mat-select required formControlName=\\\"software\\\" multiple>\\n                    <mat-option *ngFor=\\\"let sw of tipoSw\\\" [value]=\\\"sw.id_cat_sw\\\">{{sw.nombre_sw}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <mat-label>Certificaciones principales con las que cuenta su organización</mat-label>\\n                <mat-select required formControlName=\\\"certificaciones\\\" multiple>\\n                  <mat-option *ngFor=\\\"let crts of certs\\\" [value]=\\\"crts.id_cat_cert\\\">{{crts.nombre_cert}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n              <mat-form-field class=\\\"w-100\\\">\\n                <mat-label>Sector al que pertenece</mat-label>\\n                <mat-select required formControlName=\\\"sector\\\">\\n                  <mat-option *ngFor=\\\"let sector of sectores\\\" [value]=\\\"sector.id_cat_sec\\\">{{sector.nombre_sector}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Tipo de empresa</mat-label>\\n                  <mat-select required formControlName=\\\"tipo\\\">\\n                    <mat-option *ngFor=\\\"let te of tipoEmpresa\\\" [value]=\\\"te.id_cat_te\\\">{{te.nombre_tipo}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12 text-right\\\">\\n              <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" style=\\\"width: 100px;\\\">Limpiar</button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px; width: 100px;\\\">Guardar</button>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"offset-lg-5 col-lg-1 offset-md-5 col-md-1 offset-sm-4 col-sm-2\\\">\\n              <mat-spinner *ngIf=\\\"saving\\\"></mat-spinner>\\n              <h1 class=\\\"lead text-danger\\\" *ngIf=\\\"error\\\">Error en registro</h1>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n      <div class=\\\"col\\\">\\n        <p class=\\\"lead text-center\\\">Información guardada.</p>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n      <div class=\\\"mx-auto\\\">\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"finalizar()\\\">Siguiente</button>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <small class=\\\"text-danger\\\">\\n          * Campo obligatorio\\n        </small>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { SessionService } from 'src/app/services/session.service';\nimport { EstatService } from 'src/app/services/estat.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-form-estatificacion',\n  templateUrl: './form-estatificacion.component.html',\n  styleUrls: ['./form-estatificacion.component.css']\n})\nexport class FormEstatificacionComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private cats: CatalogosService,\n    private session: SessionService,\n    private estat: EstatService,\n    private router: Router\n  ) { }\n\n  formEstat: FormGroup;\n\n  ngOnInit() {\n    this.formEstat = this.fb.group({\n      tamaño_emp :['',[Validators.required]],\n      nivel_ventas :['',[Validators.required]],\n      nivel_ventas_sector :['',[Validators.required]],\n      software :['',[Validators.required]],\n      certificaciones :['',[Validators.required]],\n      sector :['',[Validators.required]],\n      tipo :['',[Validators.required]],\n      empresa_id : this.session.getEmpresaId(),\n      contacto_id : this.session.getContactoId()\n    });\n\n    this.getCats();\n  }\n\n  tamEmpresa:any[];\n  nivVentas:any[];\n  detVentas:any[];\n  tipoSw:any[];\n  certs:any[];\n  sectores:any[];\n  tipoEmpresa:any[];\n  saving:boolean=false;\n  error:boolean=false;\n  guardado: boolean = false;\n\n  getCats(){\n    this.cats.getTamEmp().subscribe(\n      res => {\n        this.tamEmpresa = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getNivelVentas().subscribe(\n      res => {\n        this.nivVentas = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getDetalleVentas().subscribe(\n      res => {\n        this.detVentas = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getTipoSw().subscribe(\n      res => {\n        this.tipoSw = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getCertificaciones().subscribe(\n      res => {\n        this.certs = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getSectores().subscribe(\n      res => {\n        this.sectores = res;\n      },err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getTipoEmp().subscribe(\n      res => {\n        this.tipoEmpresa = res;\n      },err => {\n        console.error(err);\n      }\n    );\n  }\n\n  save(){\n    this.saving = true;\n    this.estat.add(this.formEstat.value).subscribe(\n      res => {\n        this.session.updateSession();\n        this.saving = false;\n        this.formEstat.disable();\n        this.guardado = true;\n      },\n      err => {\n        this.error=true;\n        console.error(err);\n      }\n    );\n  }\n\n  finalizar(){\n    this.router.navigateByUrl('landing');\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm1zL2Zvcm0tcHJvZHVjdG9zL2Zvcm0tcHJvZHVjdG9zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <h1 class=\\\"display-4\\\">Productos y servicios de la empresa</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <form class=\\\"example-form\\\" [formGroup]=\\\"formProducto\\\" (ngSubmit)=\\\"save()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-8 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Nombre producto\\\" required formControlName=\\\"nombre_producto\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('nombre_producto').errors&&formProducto.get('nombre_producto').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('nombre_producto').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('nombre_producto').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n              <p *ngIf=\\\"formProducto.get('nombre_producto').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-4 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Tipo (Origen)</mat-label>\\n              <mat-select formControlName=\\\"tipo\\\" (selectionChange)=\\\"tipoProd()\\\" required>\\n                <mat-option *ngFor=\\\"let tipo of tipos\\\" [value]=\\\"tipo.id_tipo_prod\\\">{{tipo.tipo_producto}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('tipo').errors&&formProducto.get('tipo').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('tipo').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <textarea matInput placeholder=\\\"Descripción del producto\\\" formControlName=\\\"descripcion_producto\\\" required></textarea>                \\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('descripcion_producto').errors&&formProducto.get('descripcion_producto').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('descripcion_producto').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('descripcion_producto').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 500 caracteres</p>\\n              <p *ngIf=\\\"formProducto.get('descripcion_producto').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Tecnológias que utiliza el producto</mat-label>\\n              <mat-select multiple formControlName=\\\"tecnologias\\\" required>\\n                <mat-option *ngFor=\\\"let tec of tecnologias\\\" [value]=\\\"tec.id_cat_tec\\\">{{tec.nombre_tecnologias}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('tecnologias').errors&&formProducto.get('tecnologias').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('tecnologias').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"ocultar&&tercero\\\">\\n          <div class=\\\"col-lg-8 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Marca del producto\\\" formControlName=\\\"marca\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('marca').errors&&formProducto.get('marca').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('marca').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('marca').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 100 caracteres</p>\\n              <p *ngIf=\\\"formProducto.get('marca').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-4 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Nivel de Partnership\\\" formControlName=\\\"nivel_partnership\\\">\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('nivel_partnership').errors&&formProducto.get('nivel_partnership').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('nivel_partnership').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"ocultar&&propio\\\">\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Posicionamiento en el mercado del producto</mat-label>\\n              <mat-select formControlName=\\\"posicionamiento\\\">\\n                <mat-option *ngFor=\\\"let pos of poss\\\" [value]=\\\"pos.id_cat_pos\\\">{{pos.posicionamiento}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('posicionamiento').errors&&formProducto.get('posicionamiento').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('posicionamiento').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Caso de éxito\\\" formControlName=\\\"caso_exito\\\" required>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('caso_exito').errors&&formProducto.get('caso_exito').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('caso_exito').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('caso_exito').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Referencia del producto en producción\\\" formControlName=\\\"referencia\\\" required>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('referencia').errors&&formProducto.get('referencia').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('referencia').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n              <p *ngIf=\\\"formProducto.get('referencia').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div formArrayName=\\\"val_ind\\\">\\n\\n          <div *ngFor=\\\"let item of getValInd.controls; let pind = index\\\" [formGroupName]=\\\"pind\\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"pind>0\\\">\\n              <div class=\\\"col text-right\\\">\\n                <button class=\\\"btn btn-outline-dark btn-sm ml-auto\\\" (click)=\\\"delIndVal(pind)\\\" type=\\\"button\\\"  data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Eliminar Value Driver\\\">\\n                  <mat-icon>close</mat-icon>\\n                </button>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Value Drivers</mat-label>\\n                  <mat-select formControlName=\\\"value_driver\\\" (selectionChange)=\\\"getIL(pind,pind)\\\">\\n                    <mat-option *ngFor=\\\"let v of vd\\\" [value]=\\\"v.id_value_divers\\\">{{v.value_driver}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n  \\n              <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                  <mat-label>Industry Levers</mat-label>\\n                  <mat-select formControlName=\\\"industry_lever\\\" multiple>\\n                    <mat-option *ngFor=\\\"let i of il[pind]\\\" [value]=\\\"i.industry_levers\\\">{{i.industry_levers}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"sc\\\">\\n          <div class=\\\"col\\\">\\n            <button class=\\\"btn btn-outline-primary btn-sm ml-auto\\\" (click)=\\\"addIndVal()\\\" type=\\\"button\\\"  data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Añadir Value driver\\\">\\n              <mat-icon>add_box</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n\\n        <!--<div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Value Drivers</mat-label>\\n              <mat-select formControlName=\\\"value_driver\\\" (selectionChange)=\\\"getIL()\\\">\\n                <mat-option *ngFor=\\\"let v of vd\\\" [value]=\\\"v.id_value_divers\\\">{{v.value_driver}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('value_driver').errors&&formProducto.get('value_driver').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('value_driver').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <mat-label>Industry Levers</mat-label>\\n              <mat-select formControlName=\\\"industry_lever\\\" multiple>\\n                <mat-option *ngFor=\\\"let i of il\\\" [value]=\\\"i.id_industry_levers\\\">{{i.industry_levers}}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formProducto.get('industry_lever').errors&&formProducto.get('industry_lever').dirty\\\">\\n              <p *ngIf=\\\"formProducto.get('industry_lever').hasError('required')\\\" class=\\\"text-danger\\\">Este campo es requerido</p>\\n            </div>\\n          </div>\\n        </div>-->\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-right\\\">\\n            <button type=\\\"reset\\\" id=\\\"reset\\\" class=\\\"btn btn-danger\\\" style=\\\"width: 100px;\\\">Limpiar</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 10px; width: 100px;\\\" [disabled]=\\\"formProducto.invalid\\\">Guardar</button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-left\\\">\\n            <small class=\\\"text-danger\\\">*Campos requeridos<br>*Por el momento limitado a 5 value drivers por producto<br>*Inserción de productos uno por uno</small>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"offset-lg-5 col-lg-1 offset-md-5 col-md-1 offset-sm-4 col-sm-2\\\">\\n            <mat-spinner *ngIf=\\\"saving\\\"></mat-spinner>\\n            <h1 class=\\\"lead text-danger\\\" *ngIf=\\\"error\\\">Error en registro</h1>\\n          </div>\\n        </div>\\n        \\n      </form>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n    <div class=\\\"col\\\">\\n      <p class=\\\"lead text-center\\\">Producto guardado.</p>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"guardado\\\">\\n    <div class=\\\"offset-lg-4 offset-md-4 offset-sm-2 col-lg-2 col-md-2 col-sm-2\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary w-100\\\" (click)=\\\"addOtro()\\\">Registrar otro</button>\\n    </div>\\n    <div class=\\\"col-lg-2 col-md-2 col-sm-2\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-success w-100\\\" (click)=\\\"finalizar()\\\">Finalizar</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"!tiene_prods\\\">\\n    <div class=\\\"col text-center\\\">\\n      <p class=\\\"lead\\\">¿No tienes productos o servicios?</p>\\n      <button class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"saltarProductos()\\\">Omite esté paso aqui</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"tiene_prods\\\">\\n    <div class=\\\"col text-center\\\">\\n      <p class=\\\"lead\\\">Productos ya registrados</p>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"tiene_prods\\\">\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group list-group-sm\\\">\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let p of productos\\\">\\n          {{p.nombre}}\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { SessionService } from 'src/app/services/session.service';\nimport { ProductosService } from 'src/app/services/productos.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-form-productos',\n  templateUrl: './form-productos.component.html',\n  styleUrls: ['./form-productos.component.css']\n})\nexport class FormProductosComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private cats: CatalogosService,\n    private session: SessionService,\n    private prods: ProductosService,\n    private router: Router\n  ) { }\n\n  formProducto: FormGroup;\n    \n  tipos:any[];\n  tecnologias:any[];\n  niveles:any[];\n  poss:any[];\n  vd:any[];\n  il:any[] = new Array(4);\n  productos: any[];\n\n  saving:boolean=false;\n  error:boolean=false;\n  ocultar: boolean = false;\n  propio: boolean = false;\n  tercero: boolean = false;\n  guardado: boolean = false;\n  sc: boolean = true;\n  tiene_prods:boolean = false;\n  not_wss = /^\\S/;\n\n  ngOnInit() {\n    this.formProducto = this.fb.group({\n      nombre_producto : [null,[Validators.required, Validators.maxLength(100), Validators.pattern(this.not_wss)]],\n      tipo : [null,[Validators.required]],\n      descripcion_producto : [null,[Validators.required, Validators.maxLength(500), Validators.pattern(this.not_wss)]],\n      tecnologias : [null,[Validators.required]],\n      marca : [null,[Validators.maxLength(100), Validators.pattern(this.not_wss)]],\n      nivel_partnership : [null,[]],\n      posicionamiento : [null,[]],\n      val_ind : this.fb.array([\n        this.fb.group({\n          value_driver : [null,[Validators.required]],\n          industry_lever : [null,[Validators.required]]\n        })\n      ]),\n      /*value_driver : [null,[Validators.required]],\n      industry_lever : [null,[Validators.required]],*/\n      caso_exito : [null,[Validators.required, Validators.pattern(this.not_wss)]],\n      referencia : [null,[Validators.required, Validators.pattern(this.not_wss)]] \n    });\n\n\n    this.getCats();\n    this.getProdBasicos();\n  }\n\n  getCats(){\n    this.cats.getTipoProd().subscribe(\n      res => {\n        this.tipos = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getTecnologias().subscribe(\n      res => {\n        this.tecnologias = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getNivelPS().subscribe(\n      res => {\n        this.niveles = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getPosicionamiento().subscribe(\n      res => {\n        this.poss = res;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n    this.cats.getValueDrivers().subscribe(\n      res => {\n        /*for (let index = 0; index < 5; index++) {\n          this.vd.push(res);\n        }*/\n        this.vd = res;\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  tipoProd(){\n    this.ocultar = true;\n    if(this.formProducto.value.tipo!==1){\n      this.tercero = true;\n      this.propio = false;\n    }else{\n      this.tercero = false;\n      this.propio = true;\n    }\n  }\n\n  getIL(pid: number, index: number){\n    this.cats.getIndustryLevers(this.formProducto.value.val_ind[index].value_driver).subscribe(\n      res => {\n        this.il[pid] = res;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  save(){\n    let temp = this.formProducto.value;\n    temp.empresa_id = this.session.getEmpresaId(),\n    temp.contacto_id = this.session.getContactoId()\n    //temp.industry_lever = temp.industry_lever.join(', ');\n    this.saving = true;\n    this.prods.add(temp).subscribe(\n      res => {\n        this.session.updateSession();\n        this.saving = false;\n        this.formProducto.disable();\n        this.guardado = true;\n        document.getElementById('reset').click();\n        this.getProdBasicos();\n      },\n      err => {\n        this.error=true;\n        console.error(err);\n      }\n    );\n  }\n\n  finalizar(){\n    this.router.navigateByUrl('landing');\n  }\n\n  addOtro(){\n    document.getElementById('reset').click();\n    this.formProducto.enable();\n    this.ocultar = false;\n    this.propio = false;\n    this.tercero = false;\n    this.guardado = false;\n  }\n\n  get getValInd(){\n    return this.formProducto.get('val_ind') as FormArray;\n  }\n\n  addIndVal(){\n    const cntrs = <FormArray>this.formProducto.controls['val_ind'];\n    cntrs.push(this.fb.group({\n      value_driver : [null,[Validators.required]],\n      industry_lever : [null,[Validators.required]]\n    }));\n    if((<FormArray>this.formProducto.controls['val_ind']).length>4){\n      this.sc = false;      \n    }\n  }\n\n  delIndVal(pind: number){\n    const cntrs = <FormArray>this.formProducto.controls['val_ind'];\n    cntrs.removeAt(pind); \n    if(cntrs.length<5){\n      this.sc = true;\n    }\n  }\n\n  getProdBasicos(){\n    this.prods.getBasico(this.session.getEmpresaId()).subscribe(\n      res =>{\n        if(res.length>0){\n          this.productos = res\n          this.tiene_prods = true;\n        }else{\n          this.tiene_prods = false;\n        }\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  saltarProductos(){\n    this.saving = true;\n    this.prods.saltarProductos(this.session.getContactoId()).subscribe(\n      res => {\n        this.session.updateSession();\n        this.saving = false;\n        this.router.navigateByUrl('landing');\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n  \\r\\n.example-container > * {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9ybXMvcmVnaXN0cm8vcmVnaXN0cm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9mb3Jtcy9yZWdpc3Ryby9yZWdpc3Ryby5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbiAgXHJcbi5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"registrando\\\">\\n    <div class=\\\"col-12\\\">\\n      <h1 class=\\\"display-4 text-med\\\">Registro de administrador y contacto de empresa</h1>\\n    </div>        \\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"registrando\\\">\\n    <div class=\\\"col-12\\\">\\n      <h1 class=\\\"lead\\\">\\n        Este registro es para la persona que será el punto de contacto administrativo de la empresa, si tu empresa ya esta registrada y deseas tener tu acceso pídele al administrador que te registre como colaborador.\\n      </h1>\\n    </div>        \\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"registrando\\\">\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"newUserForm\\\" (ngSubmit)=\\\"registrar()\\\">\\n        <div class=\\\"example-container\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Usuario (Utilice de 8 a 30 caracteres sin espacios)\\\" formControlName=\\\"nombre_usuario\\\" required>\\n          </mat-form-field>\\n          <div *ngIf=\\\"newUserForm.get('nombre_usuario').errors&&newUserForm.get('nombre_usuario').dirty\\\">\\n            <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('required')\\\" class=\\\"text-danger\\\">El nombre de usuario es requerido</p>\\n            <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 8 caracteres</p>\\n            <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 30 caracteres</p>\\n            <p *ngIf=\\\"newUserForm.get('nombre_usuario').hasError('pattern')\\\" class=\\\"text-danger\\\">No se permiten espacios</p>\\n          </div>\\n\\n          <mat-form-field>\\n            <input matInput type=\\\"password\\\" placeholder=\\\"Contraseña (Minimo 6 caracteres sin espacios)\\\" formControlName=\\\"contraseña\\\" required>\\n          </mat-form-field>\\n          <div *ngIf=\\\"newUserForm.get('contraseña').errors&&newUserForm.get('contraseña').dirty\\\">\\n            <p *ngIf=\\\"newUserForm.get('contraseña').hasError('required')\\\" class=\\\"text-danger\\\">La contraseña es requerida</p>\\n            <p *ngIf=\\\"newUserForm.get('contraseña').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 6 caracteres</p>\\n            <p *ngIf=\\\"newUserForm.get('contraseña').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 12 caracteres</p>\\n            <p *ngIf=\\\"newUserForm.get('contraseña').hasError('pattern')\\\" class=\\\"text-danger\\\">No se permiten espacios</p>\\n          </div>\\n\\n          <mat-form-field>\\n            <input matInput type=\\\"password\\\" placeholder=\\\"Confirmar Contraseña\\\" [(ngModel)]=\\\"pss\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (keyup)=\\\"samePassword()\\\">\\n          </mat-form-field>\\n          <p *ngIf=\\\"!sp\\\" class=\\\"text-danger\\\">Las contraseñas no coinciden</p>\\n        </div>\\n        <hr>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Nombre(s)\\\" formControlName=\\\"nombres\\\" required>\\n            </mat-form-field>\\n            <div *ngIf=\\\"newUserForm.get('nombres').errors&&newUserForm.get('nombres').dirty\\\">\\n              <p *ngIf=\\\"newUserForm.get('nombres').hasError('required')\\\" class=\\\"text-danger\\\">El o los nombres son requeridos</p>\\n              <p *ngIf=\\\"newUserForm.get('nombres').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 50 caracteres</p>            \\n              <p *ngIf=\\\"newUserForm.get('nombres').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>            \\n            </div>\\n\\n          </div>\\n          <div class=\\\"col\\\">\\n            <mat-form-field class=\\\"w-100\\\">\\n              <input matInput placeholder=\\\"Apellido(s)\\\" formControlName=\\\"apellidos\\\" required>\\n            </mat-form-field>\\n            <div *ngIf=\\\"newUserForm.get('apellidos').errors&&newUserForm.get('apellidos').dirty\\\">\\n              <p *ngIf=\\\"newUserForm.get('apellidos').hasError('required')\\\" class=\\\"text-danger\\\">El o los apellidos son requeridos</p>\\n              <p *ngIf=\\\"newUserForm.get('apellidos').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 50 caracteres</p>            \\n              <p *ngIf=\\\"newUserForm.get('apellidos').hasError('pattern')\\\" class=\\\"text-danger\\\">No puede comenzar con espacio</p>            \\n            </div>\\n\\n          </div>\\n        </div>\\n        <mat-form-field class=\\\"w-100\\\">\\n          <mat-label>Puesto</mat-label>\\n          <mat-select formControlName=\\\"fk_id_puesto\\\" required>\\n            <mat-option *ngFor=\\\"let puesto of puestos\\\" [value]=\\\"puesto.id_puesto\\\">\\n              {{puesto.nombre_puesto}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <div *ngIf=\\\"newUserForm.get('fk_id_puesto').errors&&newUserForm.get('fk_id_puesto').dirty\\\">\\n          <p *ngIf=\\\"newUserForm.get('fk_id_puesto').hasError('required')\\\" class=\\\"text-danger\\\">El puesto es requerido</p>\\n        </div>\\n\\n        <div class=\\\"example-container\\\">\\n          <mat-form-field>\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Télefono (Utilice de 10 a 20 caracteres númericos)\\\" formControlName=\\\"telefono\\\" required>\\n          </mat-form-field>\\n          <div *ngIf=\\\"newUserForm.get('telefono').errors&&newUserForm.get('telefono').dirty\\\">\\n            <p *ngIf=\\\"newUserForm.get('telefono').hasError('required')\\\" class=\\\"text-danger\\\">El télefono es requerido</p>\\n            <p *ngIf=\\\"newUserForm.get('telefono').hasError('pattern')\\\" class=\\\"text-danger\\\">Digite un télefono válido</p>\\n            <p *ngIf=\\\"newUserForm.get('telefono').hasError('minlength')\\\" class=\\\"text-danger\\\">Mínimo 10 caracteres</p>                        \\n            <p *ngIf=\\\"newUserForm.get('telefono').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 20 caracteres</p>            \\n          </div>\\n\\n          <mat-form-field>\\n            <input type=\\\"email\\\" matInput placeholder=\\\"Correo de contacto\\\" formControlName=\\\"email\\\" required>\\n          </mat-form-field>\\n          <div *ngIf=\\\"newUserForm.get('email').errors&&newUserForm.get('email').dirty\\\">\\n            <p *ngIf=\\\"newUserForm.get('email').hasError('required')\\\" class=\\\"text-danger\\\">El correo es requerido</p>\\n            <p *ngIf=\\\"newUserForm.get('email').hasError('maxlength')\\\" class=\\\"text-danger\\\">Máximo 30 caracteres</p>            \\n            <p *ngIf=\\\"newUserForm.get('email').hasError('email')\\\" class=\\\"text-danger\\\">Digite un correo válido</p>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"offset-lg-6 col-lg-6 col-md-12 col-sm-12 text-right\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary m-auto\\\" [disabled]=\\\"newUserForm.invalid&&sp\\\">Registrarme</button>\\n          </div>\\n        </div>\\n      </form>\\n      <small class=\\\"text-danger\\\">* Campo requerido</small>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"!registrando\\\">\\n    <div class=\\\"offset-lg-5 offset-md-5 offset-sm-2 col-lg-2 col-md-2 col-sm-1\\\">\\n      <div class=\\\"text-center\\\">\\n          <mat-spinner></mat-spinner>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CatalogosService } from 'src/app/services/catalogos.service';\nimport { puestos } from 'src/app/interfaces/puestos.interface';\nimport { contacto } from 'src/app/interfaces/contacto.interface';\nimport { ContactoService } from 'src/app/services/contacto.service';\nimport { SessionService } from 'src/app/services/session.service';\nimport { CorreosService } from 'src/app/services/correos.service';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\nexport class RegistroComponent implements OnInit {\n\n  constructor( \n    private router: Router, \n    private fb: FormBuilder, \n    private catServices:CatalogosService,\n    private contactoService:ContactoService,\n    private session:SessionService,\n    private correos: CorreosService) {\n   }\n\n  ngOnInit() {\n    this.loged();\n    this.newUserForm =  this.fb.group({\n      nombre_usuario : ['',[Validators.required,Validators.minLength(8),Validators.maxLength(30),Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      contraseña : ['',[Validators.required,Validators.minLength(6),Validators.maxLength(12),Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      nombres : ['',[Validators.required,Validators.maxLength(50),Validators.pattern(this.not_wss)]],\n      apellidos : ['',[Validators.required,Validators.maxLength(50),Validators.pattern(this.not_wss)]],\n      fk_id_puesto : ['',[Validators.required]],\n      telefono : ['',[Validators.required, Validators.pattern(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/),Validators.maxLength(20),Validators.minLength(10)]],\n      email : ['',[Validators.required, Validators.email,Validators.maxLength(30)]],\n      tipo_usuario : ['admin'],\n      estatus_registro : [2]\n    });\n    this.getPuestos();\n  }\n\n  newUserForm: FormGroup;\n  pss: String = \"\"\n  sp: Boolean = true;\n  puestos:puestos[];\n  registrando:boolean = true;\n  not_wss = /^\\S/;\n\n  getPuestos(){\n    this.catServices.getPuestos().subscribe(\n      res => {\n        this.puestos = res;\n      },\n      err => {\n        console.error(err);\n    });\n  }\n\n  routeTo(r: string){\n    this.router.navigateByUrl(r);\n  }\n\n  registrar(){\n    let formdata = this.newUserForm.value;\n    this.registrando = false;\n    this.contactoService.add(formdata).subscribe(\n      res => {\n        this.correos.registro(\n          {\n            \"email_origen\" : formdata.email,\n            \"nombre\" : formdata.nombres,\n            \"usuario\" : formdata.nombre_usuario,\n            \"contra\" : formdata.contraseña\n          }\n        ).subscribe(res => {},err => {});\n        setTimeout(() => {\n          this.session.saveSession(res);\n          this.routeTo('inicio');\n        }, 1500);\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n\n  loged(){\n    if(this.session.isLoged()){\n      this.routeTo('inicio');\n    }\n  }\n\n  samePassword(){\n    const temp = this.newUserForm.value;\n    if(temp.contraseña==this.pss){\n      this.sp = true;\n    }else{\n      this.sp = false;\n    }\n  }\n}\n","module.exports = \".example-form {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5pY2lvL2luaWNpby5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvaW5pY2lvL2luaWNpby5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\"  *ngIf=\\\"regstat!=6\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <h1 class=\\\"lead\\\">Progreso de registro.</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <p><ngb-progressbar showValue=\\\"true\\\" type=\\\"success\\\" [value]=\\\"progressNum\\\" [striped]=\\\"true\\\" [animated]=\\\"progressNum!=100\\\"></ngb-progressbar></p>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item w-100\\\">\\n          Registro de Usuario y Contacto \\n          <mat-icon class=\\\"text-success\\\">done</mat-icon>\\n        </li>\\n        <li class=\\\"list-group-item w-100\\\">\\n          Registro de datos principales de la empresa \\n          <mat-icon class=\\\"text-success\\\" *ngIf=\\\"regstat>2\\\">done</mat-icon>\\n        </li>\\n        <li class=\\\"list-group-item w-100\\\">\\n          Registro de direcciones de la empresa \\n          <mat-icon class=\\\"text-success\\\" *ngIf=\\\"regstat>3\\\">done</mat-icon>\\n        </li>\\n        <li class=\\\"list-group-item w-100\\\">\\n          Registro de estratificación de la empresa según la secretaria de economía \\n          <mat-icon class=\\\"text-success\\\" *ngIf=\\\"regstat>4\\\">done</mat-icon>\\n        </li>\\n        <li class=\\\"list-group-item w-100\\\">\\n          Registro de productos \\n          <mat-icon class=\\\"text-success\\\" *ngIf=\\\"regstat>5\\\">done</mat-icon>\\n        </li>\\n      </ul>\\n      <hr>\\n      <h1 class=\\\"lead\\\" *ngIf=\\\"regstat!=6\\\">Continúa tu registro en la sección inferior</h1>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n  <app-form-empresa *ngIf=\\\"regstat==2\\\"></app-form-empresa>\\n  <app-form-direcciones *ngIf=\\\"regstat==3\\\"></app-form-direcciones>\\n  <app-form-estatificacion *ngIf=\\\"regstat==4\\\"></app-form-estatificacion>\\n  <app-form-productos *ngIf=\\\"regstat==5\\\"></app-form-productos>\\n  \\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\"  *ngIf=\\\"regstat==6\\\">\\n  <div class=\\\"row \\\">\\n    <div class=\\\"col-12\\\">\\n      <h1 class=\\\"display-4\\\">FELICIDADES.</h1>\\n      <p class=\\\"lead text-left\\\">Tu registro ha sido completado y ahora ya eres parte de N.L. 4.0. Queda en espera de nuevas noticias.</p>\\n      <div class=\\\"text-center\\\">\\n        <img src=\\\"assets/logo_grande.png\\\" alt=\\\"FELICIDADES\\\" class=\\\"img-fluid mx-auto\\\">\\n      </div>\\n      <p class=\\\"lead text-right\\\"><em>Juntos formaremos un mejor Nuevo León.</em></p>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<br>\\n<hr>\\n<br>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../services/session.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private session: SessionService\n  ) { }\n\n  ngOnInit() {\n    this.loged();\n  }\n\n  private regstat = this.session.getRegStatus(); \n\n  get progressNum(){\n    switch (this.regstat) {\n      case 3:\n        return 40;\n      case 4:\n        return 60;\n      case 5:\n        return 80;\n      case 6:\n        return 100;\n      default:\n        return 20;\n    }\n  }\n\n  routeTo(r:string){\n    this.router.navigateByUrl(r);\n  }\n  loged(){\n    if(this.session.isLoged()){\n      this.routeTo('inicio');\n    }\n  }\n}\n","module.exports = \"@media (max-width: 768px) { \\r\\n    .btn-w{\\r\\n        width: 100%;\\r\\n        margin-bottom: 5px;\\r\\n    }\\r\\n}\\r\\n@media (min-width: 768px) { \\r\\n    .btn-w{\\r\\n        width: 200px;\\r\\n        margin-bottom: 5px;\\r\\n    }\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGFuZGluZy9sYW5kaW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtRQUNJLFdBQVc7UUFDWCxrQkFBa0I7SUFDdEI7QUFDSjtBQUNBO0lBQ0k7UUFDSSxZQUFZO1FBQ1osa0JBQWtCO0lBQ3RCO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sYW5kaW5nL2xhbmRpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgeyBcclxuICAgIC5idG4td3tcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICB9XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7IFxyXG4gICAgLmJ0bi13e1xyXG4gICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICB9XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n      <img src=\\\"assets/logo_chico.png\\\" alt=\\\"BigData\\\" class=\\\"img-fluid w-100\\\">\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <h1 class=\\\"display-2\\\">N.L. 4.0</h1>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <h1 class=\\\"display-4 text-justify text-med\\\">\\n              Registro de Perfil de empresas TIC’s y de Medios Interactivos. (Tecnología y comunicación) \\n          </h1>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <img src=\\\"assets/bd.jpg\\\" alt=\\\"BigData\\\" class=\\\"img-fluid w-100\\\">\\n    </div>\\n  </div>\\n  <hr>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <p class=\\\"lead text-justify\\\">\\n        Industria 4.0, cuarta revolución industrial y/o transformación digital son términos que refieren a  la evolución de la humanidad. Estos términos nos hablan de la conexión del mundo físico con el mundo virtual, de una fusión digital entre diversas disciplinas que garantizan la satisfacción del cliente y la personalización de servicio y/o productos. Hablamos de una revolución que une tecnologías digitales para permitir la creación de nuevos mercados y negocios así como la interacción entre agentes económicos. \\n      </p>\\n      <p class=\\\"lead text-justify\\\">\\n        Hablar de industria 4.0 es hablar de tecnologías como: Inteligencia Artificial, Robótica, Blockchain, Internet de las Cosas, Big Data, Realidad Aumentada o Virtual, la nube, simulaciones, materiales avanzados, manufactura aditiva, ciberseguridad, software...\\n      </p>\\n      <p class=\\\"lead text-justify\\\">\\n        ¿Tu empresa se relaciona con esta fusión digital? Bienvenido a Nuevo León 4.0\\n      </p>\\n      <p class=\\\"lead text-center\\\">\\n        ¡Registrate!\\n      </p>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-sm-12 col-md-6 text-right\\\">\\n      <button class=\\\"btn btn-primary btn-w\\\" (click)=\\\"routeTo('registro')\\\">REGÍSTRATE</button>\\n    </div>\\n    <div class=\\\"col-lg-6 col-sm-12 col-md-6\\\">\\n      <button  class=\\\"btn btn-info btn-w\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">INICIA SESIÓN</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Modal Login -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Iniciar sesión</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <app-login></app-login>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SessionService } from '../services/session.service';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor(\n    private router:Router,\n    private fb: FormBuilder,\n    private session: SessionService) { }\n\n  ngOnInit() {\n    this.loged();\n    this.loginForm = this.fb.group({\n      usuario : ['', Validators.required],\n      contra : ['', Validators.required]\n    });\n  }\n\n  loginForm: FormGroup;\n\n  routeTo(r:string){\n    this.router.navigateByUrl(r);\n  }\n  loged(){\n    if(this.session.isLoged()){\n      this.routeTo('inicio');\n    }\n  }\n}\n ","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n  \\r\\n.example-container > * {\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\n.contenedor {\\r\\n    display: table-cell;\\r\\n    vertical-align: middle;\\r\\n    text-align: center; /* requerido para alineación horizontal */\\r\\n}\\r\\n  \\r\\n.contenido {\\r\\n    display: inline-block;\\r\\n    text-align: left; /* requerido para volver a alinear texto izquierda */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGtCQUFrQixFQUFFLHlDQUF5QztBQUNqRTs7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQixnQkFBZ0IsRUFBRSxvREFBb0Q7QUFDMUUiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbiAgXHJcbi5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jb250ZW5lZG9yIHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyAvKiByZXF1ZXJpZG8gcGFyYSBhbGluZWFjacOzbiBob3Jpem9udGFsICovXHJcbn1cclxuLmNvbnRlbmlkbyB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyAvKiByZXF1ZXJpZG8gcGFyYSB2b2x2ZXIgYSBhbGluZWFyIHRleHRvIGl6cXVpZXJkYSAqL1xyXG59Il19 */\"","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n  <div class=\\\"example-container\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Usuario\\\" formControlName=\\\"usr\\\" (focus)=\\\"clear()\\\">\\n    </mat-form-field>\\n    <div *ngIf=\\\"loginForm.get('usr').errors&&loginForm.get('usr').dirty\\\">\\n      <p *ngIf=\\\"loginForm.get('usr').hasError('required')\\\" class=\\\"text-danger\\\">El nombre de usuario es requerido</p>\\n    </div>\\n\\n    <mat-form-field>\\n      <input matInput type=\\\"password\\\" placeholder=\\\"Contraseña\\\" formControlName=\\\"psw\\\" (focus)=\\\"clear()\\\">\\n    </mat-form-field>\\n    <div *ngIf=\\\"loginForm.get('psw').errors&&loginForm.get('psw').dirty\\\">\\n      <p *ngIf=\\\"loginForm.get('psw').hasError('required')\\\" class=\\\"text-danger\\\">La contraseña es requerida</p>\\n    </div>\\n    <div *ngIf=\\\"faillog\\\"><h6 class=\\\"text-warning\\\">Datos incorrectos.</h6></div>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"loginForm.invalid\\\">Iniciar sesíon</button>\\n  <button type=\\\"button\\\" id=\\\"close-modal\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" style=\\\"display: none\\\">Cerrar</button>\\n</form>\\n<div class=\\\"row\\\">\\n  <div class=\\\"offset-md-4 col-md-4\\\">\\n    <mat-spinner *ngIf=\\\"log\\\"></mat-spinner>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SessionService } from '../services/session.service';\nimport { contacto } from '../interfaces/contacto.interface';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private session: SessionService) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      usr : ['', Validators.required],\n      psw : ['', Validators.required]\n    });\n  }\n\n  loginForm: FormGroup;\n  faillog: boolean = false;\n  log: boolean = false;\n\n  login(){\n    this.log = true;\n    this.session.login(this.loginForm.value).subscribe(\n      res => {\n        let temp: contacto = res;\n        if(temp.nombre_usuario.startsWith(\"NULL\")){\n          console.error(temp.nombre_usuario);\n          this.faillog = true;\n        }else{\n          this.faillog = false;\n          this.session.saveSession(temp);\n          this.hideModal();\n          this.router.navigateByUrl('inicio');\n        }\n        this.log = false;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n    //this.hideModal();\n    //this.router.navigateByUrl('inicio');\n  }\n\n  clear(){\n    this.faillog = false;\n  }\n\n  hideModal():void {\n    document.getElementById('close-modal').click();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21pY3VlbnRhL21pY3VlbnRhLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right\\\">\\n      <!--<a class=\\\"display-2 btn btn-outline-primary\\\" (click)=\\\"routerTo('/editar/micuent')\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar\\\">\\n        <mat-icon>edit</mat-icon>\\n      </a>-->\\n      <a class=\\\"display-2 btn btn-outline-primary\\\" role=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">\\n        <mat-icon>edit</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Mi cuenta</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group list-goup-sm\\\">\\n        <li class=\\\"list-group-item\\\">\\n          <p class=\\\"lead\\\">Datos corporativos</p>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12\\\">\\n              <strong>Empresa:</strong>\\n              <br>\\n              <p>{{empresa.nombre}}</p>\\n            </div>\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12\\\">\\n              <strong>Registrado como (Rol en el sistema): </strong>\\n              <br>\\n              <p>{{colaborador.tipo_usuario}}</p>\\n            </div>\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12\\\">\\n              <strong>Puesto: </strong>\\n              <br>\\n              <p>{{puesto}}</p>\\n            </div>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"list-group-item\\\">\\n          <p class=\\\"lead\\\">Datos personales</p>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <strong>Nombre:</strong>\\n              <br>\\n              <p>{{colaborador.nombres}} {{colaborador.apellidos}}</p>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n              <strong>Correo:</strong>\\n              <br>\\n              <p>{{colaborador.email}}</p>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n              <strong>Teléfono: </strong>\\n              <br>\\n              <p>{{colaborador.telefono}}</p>\\n            </div>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"list-group-item\\\">\\n          <p class=\\\"lead\\\">Datos de sesión</p>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n              <strong>Nombre de usuario:</strong>\\n              <br>\\n              <p>{{colaborador.nombre_usuario}}</p>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\n              <strong>Contraseña: </strong>\\n              <br>\\n              <p>{{pass}}</p>\\n            </div>\\n          </div>\\n        </li>\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<hr>\\n<br>\\n\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Contraseña</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <mat-form-field class=\\\"w-100\\\">\\n          <input matInput placeholder=\\\"Digite su contraseña para editar\\\" type=\\\"password\\\" [(ngModel)]=\\\"psw2\\\" (keyup)=\\\"compararPasswords()\\\">\\n        </mat-form-field>\\n        <div class=\\\"text-right\\\">\\n          <button type=\\\"button\\\" id=\\\"close-modal\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" style=\\\"display: none\\\">Cerrar</button>\\n          <button class=\\\"btn btn-success mr-auto\\\" [disabled]=\\\"btndis\\\" (click)=\\\"entrar()\\\">Entrar</button>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { CatalogosService } from '../services/catalogos.service';\nimport { ContactoService } from '../services/contacto.service';\nimport { puestos } from '../interfaces/puestos.interface';\nimport { contacto } from '../interfaces/contacto.interface';\nimport { SessionService } from '../services/session.service';\nimport { Router } from '@angular/router';\nimport { EmpresaService } from '../services/empresa.service';\nimport { empresa_table } from '../interfaces/empresa_get.interface';\n\n@Component({\n  selector: 'app-micuenta',\n  templateUrl: './micuenta.component.html',\n  styleUrls: ['./micuenta.component.css']\n})\nexport class MicuentaComponent implements OnInit {\n\n  constructor(\n    private location: Location,\n    private catServices:CatalogosService,\n    private contactoService:ContactoService,\n    private session: SessionService,\n    private router: Router,\n    private empresasService: EmpresaService\n  ) { }\n\n  ngOnInit() {\n    this.getColaborador();\n    this.getEmpresas();\n  }\n  //this.cargando = false;\n  puestos:puestos[];\n  not_wss = /^\\S/;\n  cargando: boolean = true;\n  colaborador: contacto;\n  pass: string = \"\";\n  btndis: boolean = true;\n  psw1: string = \"\";\n  psw2: string = \"\";\n  empresa: empresa_table;\n  puesto: string = \"\";\n\n  getColaborador(){\n    this.contactoService.getContacto(this.session.getContactoId()).subscribe(\n      res => {\n        this.colaborador = res;\n        this.pass = '❌'.repeat(this.colaborador.contraseña.length);\n        this.psw1 = this.session.getPassword();\n        this.getPuestos();\n        setTimeout(() => {\n          this.cargando = false;          \n        }, 500);\n      },\n      err => console.log(err)\n    );\n  }\n\n  getEmpresas(){\n    this.empresasService.getEmpresaTable(this.session.getEmpresaId()).subscribe(\n      res => this.empresa = res,\n      err => console.log(err)\n    );\n  }\n\n  getPuestos(){\n    this.catServices.getPuestos().subscribe(\n      res => {\n        this.puestos = res;\n        this.puesto = this.puestos.find( e => e.id_puesto == this.colaborador.fk_id_puesto).nombre_puesto;\n      },\n      err => {\n        console.error(err);\n    });\n  }\n\n  compararPasswords(){\n    if(this.psw1 == this.psw2){\n      this.btndis = false;\n    }else{\n      this.btndis = true;\n    }\n  }\n\n  return(){\n    this.location.back();\n  }\n\n  routerTo(r : string)\n  {\n    this.router.navigateByUrl(r);\n  }\n\n  entrar(){\n    this.hideModal();\n    this.routerTo('editar/micuenta');\n  }\n\n  hideModal():void {\n    document.getElementById('close-modal').click();\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light  shadow-lg\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/inicio\\\" >\\n      <img src=\\\"assets/logo_chico.png\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\n      N.L. 4.0\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link text-dark\\\" routerLink=\\\"/empresa\\\" routerLinkActive=\\\"active\\\">Mi empresa</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link text-dark\\\" routerLink=\\\"/productos\\\" routerLinkActive=\\\"active\\\">Mis productos</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link text-dark\\\" routerLink=\\\"/estratificacion\\\" routerLinkActive=\\\"active\\\">Estratificación</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"admin\\\">\\n          <a class=\\\"nav-link text-dark\\\" routerLink=\\\"/colaboradores\\\" routerLinkActive=\\\"active\\\">Mis colaboradores</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li class=\\\"nav-item dropdown\\\">\\n              <a class=\\\"nav-link dropdown-toggle\\\"  data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                <mat-icon class=\\\"aligned-with-icon\\\">account_circle</mat-icon>\\n              </a>\\n              <div class=\\\"dropdown-menu mr-auto\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n                <a class=\\\"dropdown-item disabled\\\" [routerLink]=\\\"colaboradores\\\">{{nombre}}({{tipo_user}})</a>\\n                <a class=\\\"dropdown-item\\\" routerLink=\\\"/micuenta\\\">Mi cuenta</a>\\n                <a class=\\\"dropdown-item text-danger\\\" (click)=\\\"closeSession()\\\" >Cerrar sesión</a>\\n              </div>\\n            </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../services/session.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private session:SessionService,\n    private router:Router\n  ) { }\n  \n  nombre: string = \" \";\n  tipo_user: string = \" \";\n  admin: boolean = true;\n  \n  ngOnInit() {\n    this.getStrings();\n    this.isAdmin();\n  }\n\n\n  getStrings(){\n    this.nombre = this.session.getContactoName();\n    this.tipo_user = this.session.getTipoUsuario();\n  }\n\n  closeSession(){\n    this.session.closeSession();\n    this.router.navigateByUrl('landing');\n  }\n\n  isAdmin(){\n    if(this.session.getTipoUsuario() == \"colaborador\"){\n      this.admin = false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\nimport { uri_port } from './config'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogosService {\n\n  constructor(private http: HttpClient) { \n  }\n  \n  httpOptions = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n  getPuestos(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/puestos`,this.httpOptions);\n  }\n\n  getTamEmp(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/tam_empresa`,this.httpOptions)\n  }\n\n  getNivelVentas(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/nivel_ventas`,this.httpOptions)\n  }\n\n  getDetalleVentas(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/det_ventas`,this.httpOptions)\n  }\n\n  getTipoSw(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/tipo_sw`,this.httpOptions)\n  }\n\n  getCertificaciones(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/certificaciones`,this.httpOptions)\n  }\n\n  getSectores(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/sectores`,this.httpOptions)\n  }\n\n  getTipoEmp(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/tipo_empresa`,this.httpOptions)\n  }\n\n  getEstadosMex(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/estados_mex`,this.httpOptions)\n  }\n\n  getMunicipiosMex(id:number){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/municipios/${id}`,this.httpOptions)\n  }\n\n  getPaises(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/paises`,this.httpOptions)\n  }\n\n  getSectoresAntendidos(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/sectores_atendidos`,this.httpOptions)\n  }\n\n  getOrgEmpresariales(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/organizaciones`,this.httpOptions)\n  }\n\n  getTipoSede(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/tipo_sede`,this.httpOptions)\n  }\n\n  getTipoProd(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/tipo_producto`,this.httpOptions)\n  }\n\n  getTecnologias(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/tecnologias`,this.httpOptions)\n  }\n  \n  getNivelPS(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/nivel_partnership`,this.httpOptions)\n  }\n\n  getPosicionamiento(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/posicionamiento`,this.httpOptions)\n  }\n\n  getValueDrivers(){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/value_drivers`,this.httpOptions)\n  }\n\n  getIndustryLevers(id: number){\n    return this.http.get<any[]>(`http://${uri_port.url}:${uri_port.port}/api/cats/industry_levers/${id}`,this.httpOptions)\n  }\n}\n","/*export const uri_port = {\r\n    url : \"18.189.206.61\",\r\n    port : \"8080\"\r\n}*/\r\nexport const uri_port = {\r\n    url : \"localhost\",\r\n    port : \"57042\"\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { contacto } from '../interfaces/contacto.interface';\nimport { uri_port } from './config';\nimport { SessionService } from './session.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactoService {\n\n  constructor(\n    private http: HttpClient\n    ) { }\n  \n  httpOptions = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n  add(data : contacto){\n    return this.http.post<any>(`http://${uri_port.url}:${uri_port.port}/api/contactos`,data)\n  }\n\n  getColaboradores(id:number){\n    return this.http.get<contacto[]>(`http://${uri_port.url}:${uri_port.port}/api/colaboradores/${id}`)\n  }\n\n  saveColaborador(data:number){\n    return this.http.post<any>(`http://${uri_port.url}:${uri_port.port}/api/colaboradores`,data)\n  }\n\n  delColaborador(id:number){\n    return this.http.delete<any>(`http://${uri_port.url}:${uri_port.port}/api/colaboradores/${id}`)\n  }\n\n  updtColaborador(data:number){\n    return this.http.put<any>(`http://${uri_port.url}:${uri_port.port}/api/colaboradores`,data)\n  }\n\n  getContacto(id:number){\n    return this.http.get<contacto>(`http://${uri_port.url}:${uri_port.port}/api/contactos/${id}`)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { uri_port } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CorreosService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  registro(data : any){\n    return this.http.post<any>(`http://${uri_port.url}:${uri_port.port}/api/registro`,data)\n  }\n\n  registroColaborador(data : any){\n    return this.http.post<any>(`http://${uri_port.url}:${uri_port.port}/api/colaborador_email`,data)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { uri_port } from './config';\nimport { direccion_get } from '../interfaces/direcciones_get.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DireccionesService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n    save(data: any){\n      return this.http.post<any>(`http://${uri_port.url}:${uri_port.port}/api/direcciones`,data);\n    }\n\n    get(id: number){\n      return this.http.get<direccion_get[]>(`http://${uri_port.url}:${uri_port.port}/api/direcciones/${id}`);\n    }\n\n    delete(id: number){\n      return this.http.delete<any>(`http://${uri_port.url}:${uri_port.port}/api/direcciones/${id}`);\n    }\n\n    update(data: any){\n      return this.http.put<any>(`http://${uri_port.url}:${uri_port.port}/api/direcciones`,data);\n    }\n\n    existeDirFiscal(id:number){\n      return this.http.get<boolean>(`http://${uri_port.url}:${uri_port.port}/api/existeDirFiscal/${id}`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { uri_port } from './config';\nimport { empresa_get, empresa_table } from '../interfaces/empresa_get.interface';\nimport { info_gnlr } from '../interfaces/empresa.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  add(data:any){\n    return this.http.post<any>(`http://${uri_port.url}:${uri_port.port}/api/empresas`,data);\n  }\n\n  get(id:number){\n    return this.http.get<empresa_get[]>(`http://${uri_port.url}:${uri_port.port}/api/empresas/${id}`);\n  }\n\n  getInfoGnrl(id:number){\n    return this.http.get<info_gnlr[]>(`http://${uri_port.url}:${uri_port.port}/api/info_gnrl/${id}`);\n  }\n\n  getEmpresaTable(id:number){\n    return this.http.get<empresa_table>(`http://${uri_port.url}:${uri_port.port}/api/empresa_updt/${id}`);\n  }\n\n  update(data:any){\n    return this.http.put<any>(`http://${uri_port.url}:${uri_port.port}/api/empresa_updt`,data);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { uri_port } from './config';\nimport { HttpClient } from '@angular/common/http';\nimport { estatificacion, estatificacion_table, cert_emp, soft_emp } from '../interfaces/estat.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EstatService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  add(data:any){\n    return this.http.post<any>(`http://${uri_port.url}:${uri_port.port}/api/estatificacion`,data);\n  }\n\n  get(id: number){\n    return this.http.get<estatificacion[]>(`http://${uri_port.url}:${uri_port.port}/api/estatificacion/${id}`);\n  }\n\n  update(data:any){\n    return this.http.put<any>(`http://${uri_port.url}:${uri_port.port}/api/estatificacion`,data);\n  }\n\n  getTable(id: number){\n    return this.http.get<estatificacion_table>(`http://${uri_port.url}:${uri_port.port}/api/estatificacion_table/${id}`);\n  }\n\n  getCertEmp(id: number){\n    return this.http.get<cert_emp[]>(`http://${uri_port.url}:${uri_port.port}/api/cert_emp/${id}`);\n  }\n  getSoftEmp(id: number){\n    return this.http.get<soft_emp[]>(`http://${uri_port.url}:${uri_port.port}/api/soft_emp/${id}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { uri_port } from './config';\nimport { producto_basico, producto, producto_tabla, producto_tecnologias } from '../interfaces/productos.interface';\nimport { val_ind, val_indTable } from '../interfaces/val_ind.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductosService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  add(data:any){\n    return this.http.post<any>(`http://${uri_port.url}:${uri_port.port}/api/productos`,data);\n  }\n\n  get(id: number){\n    return this.http.get<producto[]>(`http://${uri_port.url}:${uri_port.port}/api/productos/${id}`);\n  }\n\n  getBasico(id: number){\n    return this.http.get<producto_basico[]>(`http://${uri_port.url}:${uri_port.port}/api/productosbasicos/${id}`);\n  }\n\n  getById(id: number){\n    return this.http.get<producto[]>(`http://${uri_port.url}:${uri_port.port}/api/producto/${id}`);\n  }\n\n  saltarProductos(id: number){\n    return this.http.get<producto[]>(`http://${uri_port.url}:${uri_port.port}/api/siguiente_paso/${id}`);\n  }\n\n  delete(id: number){\n    return this.http.delete<any>(`http://${uri_port.url}:${uri_port.port}/api/producto/${id}`);\n  }\n\n  update(data: any){\n    return this.http.put<any>(`http://${uri_port.url}:${uri_port.port}/api/producto`,data);\n  }\n\n  getValInd(id: number){\n    return this.http.get<val_ind[]>(`http://${uri_port.url}:${uri_port.port}/api/val_ind/${id}`);\n  }\n\n  getValIndTable(id: number){\n    return this.http.get<val_indTable[]>(`http://${uri_port.url}:${uri_port.port}/api/valindtable/${id}`);\n  }\n\n  getProductoTabla(id : number){\n    return this.http.get<producto_tabla>(`http://${uri_port.url}:${uri_port.port}/api/producto_tabla/${id}`);\n  }\n\n  getTecnologiaProducto(id : number){\n    return this.http.get<producto_tecnologias[]>(`http://${uri_port.url}:${uri_port.port}/api/tecprod/${id}`);\n  }\n  getMarca(id : number){\n    return this.http.get<any>(`http://${uri_port.url}:${uri_port.port}/api/marca/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { uri_port } from './config'\nimport { ContactoService } from './contacto.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  constructor(\n    private http: HttpClient,\n    private contactoService: ContactoService\n  ) { }\n\n  login(data:any){\n    return this.http.post<any>(`http://${uri_port.url}:${uri_port.port}/api/login`,data);\n  }\n\n  getById(){\n    return this.http.get<any>(`http://${uri_port.url}:${uri_port.port}/api/contactos/${this.getContactoId()}`);\n  }\n  updateSession(){\n    this.getById().subscribe(\n      res => {\n        sessionStorage.setItem('contacto' ,JSON.stringify(res));\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n  isLoged():boolean{\n    if(!sessionStorage.length){\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  saveSession(res : any){\n    sessionStorage.setItem('contacto' ,JSON.stringify(res));\n  }\n\n  getContactoId():number{\n    return JSON.parse(sessionStorage.getItem('contacto')).id_contacto;\n  }\n  getContactoName():string{\n    return JSON.parse(sessionStorage.getItem('contacto')).nombres;\n  }\n  getUsername():string{\n    return JSON.parse(sessionStorage.getItem('contacto')).nombre_usuario;\n  }\n  getPassword():string{\n    return JSON.parse(sessionStorage.getItem('contacto')).contraseña;\n  }\n  getTipoUsuario():string{\n    return JSON.parse(sessionStorage.getItem('contacto')).tipo_usuario;\n  }\n\n  getRegStatus():number{\n    return JSON.parse(sessionStorage.getItem('contacto')).estatus_registro;\n  }\n  \n  getEmpresaId():number{\n    return JSON.parse(sessionStorage.getItem('contacto')).fk_id_empresa;\n  }\n\n  closeSession(){\n    sessionStorage.clear();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Zlci9jb2xhYm9yYWRvcmVzL2NvbGFib3JhZG9yZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right\\\">\\n      <a class=\\\"display-2 btn btn-outline-primary\\\" (click)=\\\"routerTo('/agregar/colaborador')\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Añadir colaborador\\\">\\n        <mat-icon>add_box</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Mis colaboradores</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group\\\">\\n\\n        <li class=\\\"list-group-item\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <table class=\\\"table\\\" *ngIf=\\\"!sin_colab\\\">\\n                <thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">Nombre</th>\\n                    <th scope=\\\"col\\\">Email</th>\\n                    <th scope=\\\"col\\\">Teléfono</th>\\n                    <th scope=\\\"col\\\"></th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let colaborador of colaboradores; let i = index\\\">\\n                    <th scope=\\\"row\\\">{{i+1}}</th>\\n                    <td>{{colaborador.nombres }} {{colaborador.apellidos}}</td>\\n                    <td>{{colaborador.email}}</td>\\n                    <td>{{colaborador.telefono}}</td>\\n                    <td class=\\\"text-right\\\">\\n                        <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\">\\n                          <a role=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar esta dirección\\\" routerLink='/editar/colaborador/{{colaborador.id_contacto}}' routerLinkActive='active'>\\n                            <mat-icon>edit</mat-icon>\\n                          </a>\\n                          <a role=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Eliminar esta dirección\\\" routerLink='/eliminar/colaborador/{{colaborador.id_contacto}}' routerLinkActive='active'>\\n                            <mat-icon>delete_forever</mat-icon>\\n                          </a>\\n                        </div>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <div class=\\\"text-center\\\" *ngIf=\\\"sin_colab\\\">\\n                <p class=\\\"lead\\\">Sin colaboradores registrados</p>\\n              </div>\\n            </div>\\n          </div>\\n        </li>\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ContactoService } from 'src/app/services/contacto.service';\nimport { SessionService } from 'src/app/services/session.service';\nimport { contacto } from 'src/app/interfaces/contacto.interface';\n\n@Component({\n  selector: 'app-colaboradores',\n  templateUrl: './colaboradores.component.html',\n  styleUrls: ['./colaboradores.component.css']\n})\nexport class ColaboradoresComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    private colaboradoresService: ContactoService,\n    private session:SessionService\n  ) { }\n\n  ngOnInit() {\n    this.getColaboradores();\n  }\n\n  cargando: boolean = true;\n  colaboradores: contacto[];\n  sin_colab: boolean = false;\n\n  getColaboradores(){\n    this.colaboradoresService.getColaboradores(this.session.getEmpresaId()).subscribe(\n      res => {\n        if(res.length == 0){\n          this.sin_colab = true;\n        }\n        this.colaboradores = res;\n        this.cargando = false;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  routerTo(r : string)\n  {\n    this.router.navigateByUrl(r);\n  }\n  return(){\n    this.location.back();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Zlci9lc3RyYXRpZmljYWNpb24vZXN0cmF0aWZpY2FjaW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right\\\">\\n      <a class=\\\"display-2 btn btn-outline-primary\\\" (click)=\\\"routerTo('editar/estratificacion')\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar\\\">\\n        <mat-icon>edit</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Estratificación</h1>\\n    </div>\\n  </div>\\n\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group\\\">\\n\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Tamaño de la empresa(Personas): </strong>\\n            <br>\\n            <p class=\\\"text-justify\\\">\\n              {{estat.tamano_empresa}}\\n            </p>\\n          </li> \\n\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Nivel de ventas anuales:  </strong>\\n            <br>\\n            <p class=\\\"text-justify\\\">\\n              {{estat.nivel_ventas}}\\n            </p>\\n          </li>\\n\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Detalle de ventas empreses sector servicios y productos TI:</strong>\\n            <br>\\n            <p class=\\\"text-justify\\\">\\n              {{estat.detalle_ventas}}\\n            </p>\\n          </li>\\n\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Software que utilizan actualmente para sus procesos en su organización</strong>            \\n            <br>\\n            <ul class=\\\"list-group list-group-horizontal-sm\\\">\\n              <li class=\\\"list-group-item\\\" *ngFor=\\\"let sw of software\\\">\\n                {{sw}}\\n              </li>\\n            </ul>\\n          </li>\\n\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Certificaciones principales con las que cuenta su organización</strong>\\n            <br>\\n            <ul class=\\\"list-group list-group-horizontal-sm\\\">\\n              <li class=\\\"list-group-item\\\" *ngFor=\\\"let ce of certs\\\">\\n                {{ce}}\\n              </li>\\n            </ul>\\n          </li>\\n\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Sector al que pertenece:</strong>\\n            <br>\\n            <p class=\\\"text-justify\\\">\\n              {{estat.sector}}\\n            </p>\\n          </li>\\n\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Tipo de empresa:</strong>\\n            <br>\\n            <p class=\\\"text-justify\\\">\\n              {{estat.tipo_empresa}}\\n            </p>\\n          </li>\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { EstatService } from '../../services/estat.service';\nimport { estatificacion } from '../../interfaces/estat.interface';\nimport { SessionService } from 'src/app/services/session.service';\n\n@Component({\n  selector: 'app-estratificacion',\n  templateUrl: './estratificacion.component.html',\n  styleUrls: ['./estratificacion.component.css']\n})\nexport class EstratificacionComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    private estatService: EstatService,\n    private session: SessionService\n  ) { }\n\n  cargando: boolean = true;\n  estat: estatificacion;\n  software: string[] = [];\n  certs: string[] = [];\n\n  ngOnInit() {\n    this.getEstatificacion();\n  }\n\n  getEstatificacion(){\n    this.estatService.get(this.session.getEmpresaId()).subscribe(\n      res => {\n        this.estat = res[0];\n        this.getSoftware();\n        this.getCerts();\n        this.cargando = false;\n      },\n      err => console.error(err)\n    );\n  }\n\n  getSoftware(){\n    if(this.estat.software ==  null){\n      this.software.push('Sin datos registrados');\n    }else{\n      this.software = this.estat.software.split(',');\n    }\n  }\n  getCerts(){\n    if(this.estat.certificaciones ==  null){\n      this.certs.push('Sin datos registrados');\n    }else{\n      this.certs = this.estat.certificaciones.split(',');\n    }\n  }\n\n  routerTo(r : string)\n  {\n    this.router.navigateByUrl(r);\n  }\n  return(){\n    this.location.back();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Zlci9taWVtcHJlc2EvbWllbXByZXNhLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right\\\">\\n      <a class=\\\"display-2 btn btn-outline-primary\\\" (click)=\\\"routerTo('/editar/empresa')\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar\\\">\\n        <mat-icon>edit</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Mi empresa</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group\\\">\\n\\n        <li class=\\\"list-group-item\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <strong>Datos básicos</strong>\\n              <ul>\\n                <li>\\n                    <em>Nombre empresa: </em>{{empresa.nombre}}\\n                </li>\\n                <li>\\n                    <em>Razón social: </em>{{empresa.razon_social}}\\n                </li>\\n                <li>\\n                    <em>RFC: </em>{{empresa.rfc}}\\n                </li>\\n              </ul>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <strong>Datos del contacto principal</strong>\\n              <ul>\\n                <li><em>Nombre completo: </em>{{empresa.nombre_contacto}}</li>\\n                <li><em>Puesto: </em>{{empresa.puesto_contacto}}</li>\\n                <li><em>Email: </em>{{empresa.email_contacto}}</li>\\n                <li><em>Teléfono: </em>{{empresa.telefono_contacto}}</li>\\n              </ul>\\n            </div>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"list-group-item\\\">\\n          <strong>Fecha de creación</strong> {{fecha}}, {{desde}} se encuentra en el mercado\\n        </li>\\n\\n        <li class=\\\"list-group-item\\\">\\n          <strong>Ubicación de las oficinas:</strong>\\n          <div *ngIf=\\\"!nulldirs\\\">\\n            <tabset>\\n              <tab *ngFor=\\\"let dir of direcciones; let pointIndex=index\\\" heading=\\\"{{pointIndex+1}} - {{dir.tipo_sede}}\\\">\\n                <ul>\\n                  <li><em>Dirección: </em>{{dir.direccion}}</li>\\n                  <li><em>Pais: </em>{{dir.pais}}</li>\\n                  <li><em>Estado: </em>{{dir.estado}}</li>\\n                  <li><em>Municipio: </em>{{dir.municipio}}</li>\\n                </ul>\\n                <br>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col text-center\\\">\\n                    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                      <a role=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar esta dirección\\\" routerLink='/editar/direcciones/{{dir.id}}' routerLinkActive='active'>\\n                        <mat-icon>edit</mat-icon>\\n                      </a>\\n                      <a role=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Eliminar esta dirección\\\" routerLink='/eliminar/direccion/{{dir.id}}' routerLinkActive='active'>\\n                        <mat-icon>delete_forever</mat-icon>\\n                      </a>\\n                      <a role=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Agregar dirección\\\" routerLink='/agregar/direccion' routerLinkActive='active'>\\n                        <mat-icon>add_box</mat-icon>\\n                      </a>\\n                    </div>\\n                  </div>\\n                </div>\\n                <br>\\n              </tab>\\n            </tabset>\\n          </div>\\n\\n          <div class=\\\"text-center\\\" *ngIf=\\\"nulldirs\\\">\\n            <h1 class=\\\"lead\\\">Sin direcciones registradas</h1>\\n            <a class=\\\"lead\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Agregar dirección\\\" routerLink='/agregar/direccion' routerLinkActive='active'>Añadir nueva dirección</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"list-group-item\\\">\\n          <strong>Participación en la web</strong>\\n          <ul>\\n            <li><em>Sitio web:</em><br><a href=\\\"{{empresa.web}}\\\">{{empresa.web}}</a></li>\\n            <li><em>Linked In:</em><br><a href=\\\"{{empresa.linkedin}}\\\">{{empresa.linkedin}}</a></li>\\n            <li><em>Facebook:</em><br><a href=\\\"{{empresa.facebook}}\\\">{{empresa.facebook}}</a></li>\\n            <li><em>Twitter:</em><br><a href=\\\"{{empresa.twitter}}\\\">{{empresa.twitter}}</a></li>\\n            <li><em>Instagram:</em><br><a href=\\\"{{empresa.instagram}}\\\">{{empresa.instagram}}</a></li>\\n          </ul>\\n        </li>\\n\\n        <li class=\\\"list-group-item\\\">\\n          <strong>Alcance territorial de la oferta de tus servicios.</strong>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <ul>\\n                <li>\\n                  <em>Nacional (México)</em>\\n                  <ul class=\\\"list-group list-group-sm list-group-flush\\\">\\n                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let estado of estados\\\">{{estado}}</li>\\n                  </ul>\\n                </li>\\n              </ul>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <ul>\\n                <li>\\n                  <em>Internacional</em>\\n                  <ul class=\\\"list-group list-group-sm list-group-flush\\\">\\n                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let pais of paises\\\">{{pais}}</li>\\n                  </ul>\\n                </li>\\n              </ul>\\n            </div>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"list-group-item\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <strong>Oferta valor de la organización</strong><br>\\n              <p class=\\\"text-justify\\\">\\n                {{info_gnrl.descripcion_oferta_valor}}\\n              </p>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <strong>5 Principales clientes</strong>\\n              <p class=\\\"text-justify\\\">\\n                {{info_gnrl.principales_clientes}}\\n              </p>\\n            </div>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"list-group-item\\\">\\n          <strong>Sectores atendidos por la organización</strong><small>(Finanzas, Comercio, Industria, Servicios, Gobierno)</small>\\n          <ul class=\\\"list-group list-group-horizontal-sm\\\">\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let sec of sectores_a\\\">{{sec}}</li>\\n          </ul>\\n        </li>\\n\\n        <li class=\\\"list-group-item\\\">\\n          <strong>Organizaciones empresariales en las que participa</strong>\\n          <ul class=\\\"list-group list-group-horizontal-sm\\\">\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let org of organizaciones\\\">{{org}}</li>\\n          </ul>\\n        </li>\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../services/session.service';\nimport { EmpresaService } from '../../services/empresa.service';\nimport { empresa_get } from '../../interfaces/empresa_get.interface';\nimport * as moment from 'moment';\nimport { DireccionesService } from '../../services/direcciones.service';\nimport { direccion_get } from '../../interfaces/direcciones_get.interface';\nimport { producto } from '../../interfaces/productos.interface';\nimport { ProductosService } from '../../services/productos.service';\nimport { info_gnlr } from '../../interfaces/empresa.interface';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-miempresa',\n  templateUrl: './miempresa.component.html',\n  styleUrls: ['./miempresa.component.css']\n})\nexport class MiempresaComponent implements OnInit {\n\n  constructor(\n    private session: SessionService,\n    private empresas: EmpresaService,\n    private direccionesService: DireccionesService,\n    private router: Router,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.getEmpresa();\n    this.getDirs();\n  }\n\n  empresa:empresa_get;\n  estados:string[];\n  paises:string[];\n  desde:string;\n  fecha:string;\n  direcciones:direccion_get[];\n\n  certs:string[]=[];\n  software:string[]=[];\n  sectores_a:string[]=[];\n  organizaciones:string[]=[];\n  info_gnrl: info_gnlr;\n\n  cargando: boolean = true;\n  nullpt: boolean = true;\n  nullpp: boolean = true;\n  nulldirs: boolean = true;\n\n  getEmpresa(){\n    this.empresas.get(this.session.getEmpresaId()).subscribe(\n      res => {\n        this.empresa = res[0];\n        this.getEstadosArr();\n        this.getPaisesArr();\n        this.getDates();\n        this.getInfoGnrl();\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  getDirs(){\n    this.direccionesService.get(this.session.getEmpresaId()).subscribe(\n      res => {\n        this.direcciones = res;\n        if(this.direcciones.length != 0){\n          this.nulldirs = false;\n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  \n  getEstadosArr(){\n    this.estados = this.empresa.cobertura_nacional.split(',');\n    this.estados.shift();\n  }\n  getPaisesArr(){\n    this.paises = this.empresa.cobertura_internacional.split(',');\n    this.paises.shift();\n  }\n  \n  getSectoresAtendidos(){\n    this.sectores_a = this.info_gnrl.sectores_atendidos.split(',');\n    this.sectores_a.shift();\n  }\n  getOrganizaciones(){ \n    this.organizaciones = this.info_gnrl.organizaciones.split(',');\n  }\n  getDates(){\n    var fecha_creacion = moment(this.empresa.fecha_creacion.replace('T',' ').slice(0,16)).locale('es');\n    this.desde = fecha_creacion.fromNow();\n    this.fecha = fecha_creacion.format('dddd, MMMM Do YYYY');\n    this.fecha =  this.fecha.charAt(0).toUpperCase()+this.fecha.slice(1);\n  }\n  tabString(strn: string): string{\n    return strn.slice(0,20) + '...';\n  }\n  getInfoGnrl(){\n    this.empresas.getInfoGnrl(this.session.getEmpresaId()).subscribe(\n      res => {\n        this.info_gnrl = res[0];\n        this.getSectoresAtendidos();\n        this.getOrganizaciones();\n        this.cargando = false;\n      },err => {\n        console.error(err);\n      }\n    );\n  }\n  routerTo(r : string)\n  {\n    this.router.navigateByUrl(r);\n  }\n  return(){\n    this.location.back();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Zlci9wcm9kdWN0by9wcm9kdWN0by5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1 class=\\\"display-4\\\"><a role=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"return()\\\"><mat-icon>arrow_back</mat-icon></a> Ver producto</h1>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row \\\">\\n    <div class=\\\"col-12\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\"><strong>Nombre: </strong>{{producto.nombre}}</li>\\n        <li class=\\\"list-group-item\\\"><strong>Descripción: </strong>\\n          <p>{{producto.descripcion}} </p>\\n        </li>\\n        <li class=\\\"list-group-item\\\"><strong>Origen: </strong>{{producto.origen}} </li>\\n\\n        <li class=\\\"list-group-item\\\" *ngIf=\\\"propio\\\"><strong>Posicionamiento: </strong>{{producto.posicionamiento}} </li>\\n\\n        <li class=\\\"list-group-item\\\" *ngIf=\\\"!propio\\\"><strong>Marca: </strong>{{producto.marca}} </li>\\n        <li class=\\\"list-group-item\\\" *ngIf=\\\"!propio\\\"><strong>Nivel de partnership: </strong>{{producto.partnership}} </li>\\n\\n        <li class=\\\"list-group-item\\\"><strong>Tecnologias: </strong>\\n          <ul>\\n            <li *ngFor=\\\"let tec of tecnologias\\\">{{tec}}</li>\\n          </ul>\\n        </li>\\n        <!--\\n        <li class=\\\"list-group-item\\\"><strong>Value driver: </strong>{{producto.value_driver}} </li>\\n        <li class=\\\"list-group-item\\\"><strong>Industry Lever: </strong>{{producto.industry_lever}} </li>\\n        -->\\n        <li class=\\\"list-group-item\\\">\\n          <strong>Value drivers e industry levers</strong>\\n          <ul>\\n            <li *ngFor=\\\"let item of val_ind\\\"> \\n              {{item.value_driver}}<br>{{item.industry_levers}}\\n            </li>\\n          </ul>\\n        </li>\\n        <li class=\\\"list-group-item\\\"><strong>Caso de éxito: </strong>{{producto.caso_exito}} </li>\\n        <li class=\\\"list-group-item\\\"><strong>Referencia: </strong>{{producto.referencia}} </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <br>\\n</div>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProductosService } from '../../services/productos.service';\nimport { producto } from '../../interfaces/productos.interface';\nimport {Location} from '@angular/common';\nimport { val_ind } from 'src/app/interfaces/val_ind.interface';\n\n@Component({\n  selector: 'app-producto',\n  templateUrl: './producto.component.html',\n  styleUrls: ['./producto.component.css']\n})\nexport class ProductoComponent implements OnInit {\n\n  constructor(\n    private productos: ProductosService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private location: Location\n  ) { }\n\n  producto: producto;\n  cargando: boolean = true;\n  propio: boolean = true;\n  tecnologias: string[] = [];\n  val_ind: val_ind[] = [];\n\n  ngOnInit() {\n    this.productos.getById(+this.activatedRoute.snapshot.paramMap.get(\"id\")).subscribe(\n      res => {\n        this.producto = res[0];\n        this.tecnologias = this.producto.tecnologias.split(',');\n        this.propioTercero();\n        this.getValInd();\n      },err => {\n        console.log(err);\n      }\n    )\n  }\n\n  getValInd(){\n    this.productos.getValInd(+this.activatedRoute.snapshot.paramMap.get(\"id\")).subscribe(\n      res =>{\n        this.val_ind = res;\n        this.cargando = false;\n      },\n      err =>{\n        console.log(err);\n      }\n    )\n  }\n\n  propioTercero(){\n    this.producto.origen == \"Propio\" ? this.propio = true : this.propio = false;\n  }\n\n  return(){\n    this.location.back();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Zlci9wcm9kdWN0b3MvcHJvZHVjdG9zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<hr>\\n<hr>\\n\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"!cargando\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-left\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"return()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Regresar\\\">\\n        <mat-icon>arrow_back</mat-icon>\\n      </a> \\n    </div>\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-6 text-right\\\">\\n      <a role=\\\"button\\\" class=\\\"btn btn-outline-primary display-2\\\" (click)=\\\"routerTo('agregar/producto')\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Agregar\\\">\\n        <mat-icon>add</mat-icon>\\n      </a> \\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\n      <h1 class=\\\"display-4 inline-icon\\\">Mis productos</h1>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div>\\n        <tabset>\\n          <tab heading=\\\"Todos\\\">\\n            <br>\\n            <table class=\\\"table\\\" *ngIf=\\\"tiene_prods\\\">\\n              <thead>\\n                <tr>\\n                  <th scope=\\\"col\\\">#</th>\\n                  <th scope=\\\"col\\\">Nombre producto</th>\\n                  <th scope=\\\"col\\\">Descripción</th>\\n                  <th scope=\\\"col\\\">Origen</th>\\n                  <th scope=\\\"col\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let p of productos; let inx = index;\\\">\\n                  <th scope=\\\"row\\\">{{inx+1}}</th>\\n                  <td>{{p.nombre}}</td>\\n                  <td class=\\\"text-left\\\">{{p.descripcion}}</td>\\n                  <td class=\\\"text-left\\\">{{p.origen}}</td>\\n                  <td class=\\\"text-right\\\">\\n                      <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\">\\n                        <a role=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar este producto\\\" routerLink='/editar/producto/{{p.id_producto}}' routerLinkActive='active'>\\n                          <mat-icon>edit</mat-icon>\\n                        </a>\\n                        <a role=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Eliminar este productos\\\" routerLink='/eliminar/producto/{{p.id_producto}}' routerLinkActive='active'>\\n                          <mat-icon>delete_forever</mat-icon>\\n                        </a>\\n                      </div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"row\\\" *ngIf=\\\"!tiene_prods\\\">\\n              <div class=\\\"col text-center\\\">\\n                <p class=\\\"lead\\\">Sin productos registrados</p>\\n              </div>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Propios\\\">\\n            <br>\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th scope=\\\"col\\\">#</th>\\n                  <th scope=\\\"col\\\">Nombre producto</th>\\n                  <th scope=\\\"col\\\">Descripción</th>\\n                  <th scope=\\\"col\\\">Posicionamiento</th>\\n                  <th scope=\\\"col\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let p of pp; let inx = index;\\\">\\n                  <th scope=\\\"row\\\">{{inx+1}}</th>\\n                  <td>{{p.nombre}}</td>\\n                  <td class=\\\"text-left\\\">{{p.descripcion}}</td>\\n                  <td class=\\\"text-left\\\">{{p.posicionamiento}}</td>\\n                  <td class=\\\"text-right\\\">\\n                      <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\">\\n                        <a role=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Ver este producto\\\" routerLink='/editar/producto/{{p.id_producto}}' routerLinkActive='active'>\\n                          <mat-icon>edit</mat-icon>\\n                        </a>\\n                        <a role=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Eliminar este productos\\\" routerLink='/eliminar/producto/{{p.id_producto}}' routerLinkActive='active'>\\n                          <mat-icon>delete_forever</mat-icon>\\n                        </a>\\n                      </div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </tab>\\n          <tab heading=\\\"Terceros\\\">\\n            <br> \\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th scope=\\\"col\\\">#</th>\\n                  <th scope=\\\"col\\\">Nombre producto</th>\\n                  <th scope=\\\"col\\\">Descripción</th>\\n                  <th scope=\\\"col\\\">Marca</th>\\n                  <th scope=\\\"col\\\">Partnership</th>\\n                  <th scope=\\\"col\\\"></th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let p of pt; let inx = index;\\\">\\n                  <th scope=\\\"row\\\">{{inx+1}}</th>\\n                  <td>{{p.nombre}}</td>\\n                  <td class=\\\"text-left\\\">{{p.descripcion}}</td>\\n                  <td class=\\\"text-left\\\">{{p.marca}}</td>\\n                  <td class=\\\"text-left\\\">{{p.partnership}}</td>\\n                  <td class=\\\"text-right\\\">\\n                      <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\">\\n                        <a role=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar este producto\\\" routerLink='/editar/producto/{{p.id_producto}}' routerLinkActive='active'>\\n                          <mat-icon>edit</mat-icon>\\n                        </a>\\n                        <a role=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Eliminar este productos\\\" routerLink='/eliminar/producto/{{p.id_producto}}' routerLinkActive='active'>\\n                          <mat-icon>delete_forever</mat-icon>\\n                        </a>\\n                      </div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n<div class=\\\"container shadow-lg p-3 mb-5 mt-5 bg-white rounded w-100 m-auto\\\" *ngIf=\\\"cargando\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h1 class=\\\"lead\\\">\\n          Cargando datos . . .\\n        </h1>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-spinner class=\\\"mx-auto\\\"></mat-spinner>\\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { producto } from '../../interfaces/productos.interface';\nimport { ProductosService } from '../../services/productos.service';\nimport { Location } from '@angular/common';\nimport { SessionService } from 'src/app/services/session.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-productos',\n  templateUrl: './productos.component.html',\n  styleUrls: ['./productos.component.css']\n})\nexport class ProductosComponent implements OnInit {\n\n  constructor(\n    private session: SessionService,\n    private router: Router,\n    private location: Location,\n    private productosService: ProductosService\n  ) { }\n  \n  cargando:boolean = true;\n  tiene_prods: boolean = false;\n  productos: producto[];\n  pp: producto[];\n  pt: producto[];\n\n  ngOnInit() {\n    this.getProductos();\n  } \n\n  getProductos(){\n    this.productosService.get(this.session.getEmpresaId()).subscribe(\n      res => {\n        if(res.length>0){\n          this.tiene_prods = true;\n        }\n        this.productos = res;\n        this.pp = res.filter( f => f.origen == \"Propio\" );\n        this.pt = res.filter( f => f.origen == \"Tercero\" );\n        this.cargando = false;\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  routerTo(r : string)\n  {\n    this.router.navigateByUrl(r);\n  }\n  return(){\n    this.location.back();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}